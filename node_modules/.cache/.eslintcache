[{"/Users/choonwheepeh/demo/src/index.js":"1","/Users/choonwheepeh/demo/src/App.js":"2","/Users/choonwheepeh/demo/src/reportWebVitals.js":"3","/Users/choonwheepeh/demo/src/components/aTextfield.js":"4","/Users/choonwheepeh/demo/src/components/aTextField.js":"5","/Users/choonwheepeh/demo/src/components/aForm.js":"6","/Users/choonwheepeh/demo/src/components/utils.js":"7","/Users/choonwheepeh/demo/src/components/aSection.js":"8","/Users/choonwheepeh/demo/src/components/testContentPanel.js":"9","/Users/choonwheepeh/demo/src/components/aLayout.js":"10","/Users/choonwheepeh/demo/src/components/testHeader.js":"11","/Users/choonwheepeh/demo/src/components/testSidePanel.js":"12","/Users/choonwheepeh/demo/src/components/AStepperForm.js":"13","/Users/choonwheepeh/demo/src/components/aStepperForm.js":"14","/Users/choonwheepeh/demo/src/components/aStepperFormPart.js":"15","/Users/choonwheepeh/demo/src/components/testContentPanel2.js":"16","/Users/choonwheepeh/demo/src/components/testContentPanel3.js":"17","/Users/choonwheepeh/demo/src/components/aFastTable.js":"18","/Users/choonwheepeh/demo/src/components/aFastTableFilterOptionsMenu.js":"19","/Users/choonwheepeh/demo/src/components/aFastTableFilterOptionsDialog.js":"20","/Users/choonwheepeh/demo/src/components/aSearchPaginationBar.js":"21","/Users/choonwheepeh/demo/src/components/aSearch.js":"22"},{"size":503,"mtime":1631864769507,"results":"23","hashOfConfig":"24"},{"size":842,"mtime":1632727969767,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1630733934996,"results":"26","hashOfConfig":"24"},{"size":205,"mtime":1630735498372,"results":"27","hashOfConfig":"24"},{"size":11533,"mtime":1632198108989,"results":"28","hashOfConfig":"24"},{"size":4454,"mtime":1631525027204,"results":"29","hashOfConfig":"24"},{"size":1336,"mtime":1632041732317,"results":"30","hashOfConfig":"24"},{"size":2570,"mtime":1631695642943,"results":"31","hashOfConfig":"24"},{"size":3974,"mtime":1631507826151,"results":"32","hashOfConfig":"24"},{"size":1976,"mtime":1631609747358,"results":"33","hashOfConfig":"24"},{"size":1900,"mtime":1631276832776,"results":"34","hashOfConfig":"24"},{"size":2973,"mtime":1631278728010,"results":"35","hashOfConfig":"24"},{"size":4333,"mtime":1631381425976,"results":"36","hashOfConfig":"24"},{"size":6641,"mtime":1632656706370,"results":"37","hashOfConfig":"24"},{"size":1635,"mtime":1631524747952,"results":"38","hashOfConfig":"24"},{"size":1350,"mtime":1631678431504,"results":"39","hashOfConfig":"24"},{"size":1105,"mtime":1632197568472,"results":"40","hashOfConfig":"24"},{"size":11952,"mtime":1632143810340,"results":"41","hashOfConfig":"24"},{"size":2594,"mtime":1631947962611,"results":"42","hashOfConfig":"24"},{"size":1847,"mtime":1631881567553,"results":"43","hashOfConfig":"24"},{"size":3722,"mtime":1632161472315,"results":"44","hashOfConfig":"24"},{"size":2096,"mtime":1632197515808,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1xowjqx",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"48"},"/Users/choonwheepeh/demo/src/index.js",[],["100","101"],"/Users/choonwheepeh/demo/src/App.js",["102"],"/Users/choonwheepeh/demo/src/reportWebVitals.js",[],"/Users/choonwheepeh/demo/src/components/aTextfield.js",["103","104"],"/Users/choonwheepeh/demo/src/components/aTextField.js",[],"/Users/choonwheepeh/demo/src/components/aForm.js",[],"/Users/choonwheepeh/demo/src/components/utils.js",[],"/Users/choonwheepeh/demo/src/components/aSection.js",[],"/Users/choonwheepeh/demo/src/components/testContentPanel.js",[],"/Users/choonwheepeh/demo/src/components/aLayout.js",["105","106","107","108"],"import React from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TestContentPanel from \"./testContentPanel\";\nimport TestContentPanel2 from \"./testContentPanel2\";\nimport TestHeader from \"./testHeader\";\nimport TestSidePanel from \"./testSidePanel\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    background: \"ffffff\",\n  },\n  header: {\n    zIndex: 100,\n  },\n  stickyHeader: {\n    position: \"sticky\",\n    top: \"0px\",\n    zIndex: 100,\n  },\n  stickyFooter: {\n    position: \"sticky\",\n    bottom: \"0px\",\n  },\n}));\n\n/*\nClassic Layout\n|-------------------------------|\n|             Header            |\n|-------------------------------|\n|        |                      |\n|  Side  |       Content        |\n|  Panel |        Panel         |\n|        |                      |\n|        |                      |\n|-------------------------------|\n|             Footer            |\n|-------------------------------|\n\n*/\n\nconst ALayout = (props) => {\n  const classes = useStyles();\n\n  let gridContainerProps = {};\n  let headerProps = { className: classes.header };\n  let navbarProps = {};\n  let sidePanelProps = {};\n  let contentPanelProps = {};\n  let footerProps = {};\n\n  if (props.stickyHeader === undefined || props.stickyHeader === true)\n    headerProps.className = classes.stickyHeader;\n  if (props.stickyFooter === undefined || props.stickyFooter === true)\n    footerProps.className = classes.stickyFooter;\n\n  return (\n    <Grid container {...gridContainerProps}>\n      <Grid item xs={12} {...headerProps}>\n        <TestHeader />\n      </Grid>\n      <Grid item xs={2} {...sidePanelProps}>\n        <TestSidePanel />\n      </Grid>\n      <Grid item xs={10} {...contentPanelProps}>\n        {props.contentPanel}\n      </Grid>\n      <Grid item xs={12} {...footerProps}>\n        <Paper>footer</Paper>\n      </Grid>\n    </Grid>\n  );\n};\nexport default ALayout;\n","/Users/choonwheepeh/demo/src/components/testHeader.js",["109","110"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SportsKabaddiIcon from \"@material-ui/icons/SportsKabaddi\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport ToolBar from \"@material-ui/core/ToolBar\";\n\nconst useClasses = makeStyles((theme) => ({\n  appBar: {\n    zIndex: 1000,\n    backgroundColor: \"#1122ff\",\n  },\n  toolBar: {\n    minHeight: \"48px\",\n  },\n  logoIcon: {\n    fill: \"#ffffff\",\n    width: \"32px\",\n    height: \"32px\",\n  },\n  title: {\n    marginLeft: \"10px\",\n    color: \"#ffffff\",\n    fontSize: \"16px\",\n    fontWeight: \"bold\",\n  },\n  navBar: {\n    backgroundImage: \"linear-gradient(to bottom, #1122aa, #001188 )\",\n  },\n  navToolBar: {\n    minHeight: \"20px\",\n  },\n  menuButton: {\n    fontSize: \"12px\",\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n\n    \"&:hover\": {\n      backgroundColor: \"rgba(100,100,255,0.1)\",\n    },\n  },\n}));\n\nconst TestHeader = (props) => {\n  const classes = useClasses();\n  return (\n    <React.Fragment>\n      <AppBar className={classes.appBar} position=\"sticky\">\n        <ToolBar className={classes.toolBar}>\n          <SportsKabaddiIcon className={classes.logoIcon} />\n          <Typography className={classes.title}>PUNCH BELOW BELT</Typography>\n        </ToolBar>\n      </AppBar>\n      <AppBar className={classes.navBar} position=\"sticky\">\n        <ToolBar className={classes.navToolBar}>\n          <Typography className={classes.menuButton}>Main</Typography>\n          <Typography className={classes.menuButton}>Do Stuff</Typography>\n          <Typography className={classes.menuButton}>Ask Me</Typography>\n          <Typography className={classes.menuButton}>Admin</Typography>\n        </ToolBar>\n      </AppBar>\n    </React.Fragment>\n  );\n};\n\nexport default TestHeader;\n","/Users/choonwheepeh/demo/src/components/testSidePanel.js",["111","112","113"],"import React from \"react\";\nimport { alpha, makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SportsKabaddiIcon from \"@material-ui/icons/SportsKabaddi\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport ToolBar from \"@material-ui/core/ToolBar\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useClasses = makeStyles((theme) => ({\n  navBar: {\n    backgroundImage: \"linear-gradient(to bottom, #112266, #001155 )\",\n    height: \"100%\",\n  },\n  navToolBar: {\n    minHeight: \"20px\",\n    flexDirection: \"column\",\n    height: \"100%\",\n  },\n  menuButton: {\n    width: \"100%\",\n    fontSize: \"16px\",\n    textAlign: \"left\",\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n\n    \"&:hover\": {\n      backgroundColor: \"rgba(100,100,255,0.1)\",\n    },\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: alpha(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(3),\n        width: \"auto\",\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\n\nconst TestSidePanel = (props) => {\n  const classes = useClasses();\n  return (\n    <React.Fragment>\n      <AppBar className={classes.navBar} position=\"sticky\">\n        <ToolBar className={classes.navToolBar}>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </div>\n          <Typography className={classes.menuButton}>Main</Typography>\n          <Typography className={classes.menuButton}>Do Stuff</Typography>\n          <Typography className={classes.menuButton}>Ask Me</Typography>\n          <Typography className={classes.menuButton}>Admin</Typography>\n        </ToolBar>\n      </AppBar>\n    </React.Fragment>\n  );\n};\n\nexport default TestSidePanel;\n","/Users/choonwheepeh/demo/src/components/AStepperForm.js",["114"],"/Users/choonwheepeh/demo/src/components/aStepperForm.js",["115"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AForm from \"./aForm\";\nimport { cloneChildrenWithAdditionalProps } from \"./utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst AStepperForm = (props) => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState();\n  const [steps, setSteps] = React.useState([]);\n  let initDefaultMode = \"edit\";\n  if (props.defaultMode !== undefined) initDefaultMode = props.defaultMode;\n  const [defaultMode, setDefaultMode] = useState(initDefaultMode);\n  let initDefaultModeMapping = { review: \"readOnly\" };\n  if (props.defaultModeMapping !== undefined) {\n    initDefaultModeMapping = {\n      ...initDefaultModeMapping,\n      ...props.defaultModeMapping,\n    };\n  }\n  const [defaultModeMapping] = useState(initDefaultModeMapping);\n\n  const reviewBeforeSubmit =\n    props.reviewBeforeSubmit === undefined ? true : false;\n\n  let stepTitles = {};\n  useEffect(() => {\n    if (reviewBeforeSubmit) {\n      stepTitles[\"_review_form\"] = { title: \"Review Form\", optional: false };\n    }\n    setSteps(Object.values(stepTitles));\n  }, []);\n\n  const addStep = (name, stepTitle, optional) => {\n    stepTitles[name] = {\n      title: stepTitle,\n      optional: optional === undefined ? false : optional,\n    };\n    return Object.keys(stepTitles).length - 1;\n  };\n\n  let additionalProps = {\n    add_step: addStep,\n    active_step: activeStep,\n    num_steps: steps.length,\n    review_before_submit: reviewBeforeSubmit,\n    default_mode: defaultMode,\n    default_mode_mapping: defaultModeMapping,\n  };\n  const childrenWithAdditionalProps = cloneChildrenWithAdditionalProps(\n    props,\n    additionalProps\n  );\n\n  const isStepOptional = (stepNum) => {\n    return steps.length === activeStep ? false : steps[stepNum].optional;\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped?.has(step);\n  };\n\n  const updateDefaultMode = (activeStep) => {\n    console.log(\"updateMode\");\n    if (activeStep === steps.length - 1) {\n      setDefaultMode(\"review\");\n      console.log(\"set Mode review\");\n    }\n  };\n\n  const handleNext = (event) => {\n    event.preventDefault();\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n    updateDefaultMode(activeStep + 1);\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n    console.log(\"handleNext\" + activeStep);\n  };\n\n  const handleBack = (event) => {\n    event.preventDefault();\n    updateDefaultMode(activeStep - 1);\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = (event) => {\n    event.preventDefault();\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n    updateDefaultMode(activeStep + 1);\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = (event) => {\n    event.preventDefault();\n    updateDefaultMode(0);\n    setActiveStep(0);\n  };\n\n  const renderSubmitButton = () => {\n    if (activeStep === steps.length - 1)\n      return (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          type=\"submit\"\n        >\n          Submit\n        </Button>\n      );\n  };\n\n  const renderNextButton = () => {\n    if (activeStep < steps.length - 1)\n      return (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleNext}\n          className={classes.button}\n        >\n          Next\n        </Button>\n      );\n  };\n\n  const renderBackButton = () => {\n    return (\n      <Button\n        disabled={activeStep === 0}\n        onClick={handleBack}\n        className={classes.button}\n      >\n        Back\n      </Button>\n    );\n  };\n\n  const renderSkipButton = () => {\n    if (isStepOptional(activeStep)) {\n      return (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleSkip}\n          className={classes.button}\n        >\n          Skip\n        </Button>\n      );\n    }\n  };\n\n  const renderResetButton = () => {\n    if (activeStep === steps.length)\n      return (\n        <Button onClick={handleReset} className={classes.button}>\n          Reset\n        </Button>\n      );\n  };\n\n  return (\n    <div className={classes.root}>\n      {steps.length > 0 && (\n        <Stepper activeStep={activeStep}>\n          {steps.map((step, index) => {\n            const stepProps = {};\n            const labelProps = {};\n            if (isStepOptional(index)) {\n              labelProps.optional = (\n                <Typography variant=\"caption\">Optional</Typography>\n              );\n            }\n            if (isStepSkipped(index)) {\n              stepProps.completed = false;\n            }\n            return (\n              <Step key={step.title} {...stepProps}>\n                <StepLabel {...labelProps}>{step.title}</StepLabel>\n              </Step>\n            );\n          })}\n        </Stepper>\n      )}\n      <div>\n        <div>\n          <AForm onSubmit={handleNext}>\n            <div>{childrenWithAdditionalProps}</div>\n            {steps.length > 0 && (\n              <div>\n                {activeStep === steps.length && (\n                  <React.Fragment>\n                    <Typography className={classes.instructions}>\n                      Form Submitted\n                    </Typography>\n                  </React.Fragment>\n                )}\n\n                {renderBackButton()}\n                {renderSkipButton()}\n                {renderNextButton()}\n                {renderSubmitButton()}\n                {renderResetButton()}\n              </div>\n            )}\n          </AForm>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AStepperForm;\n","/Users/choonwheepeh/demo/src/components/aStepperFormPart.js",[],"/Users/choonwheepeh/demo/src/components/testContentPanel2.js",["116","117"],"import React, { useState } from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport AStepperForm from \"./aStepperForm\";\nimport AStepperFormPart from \"./aStepperFormPart\";\nimport ATextField from \"./aTextField\";\nimport ASection from \"./aSection\";\n\nconst TestContentPanel2 = (props) => {\n  return (\n    <AStepperForm>\n      <AStepperFormPart name=\"pp\" title=\"Personal Particulars\" optional>\n        <Typography>Personal Particulars</Typography>\n        <ATextField name=\"firstName\" />\n        <ATextField name=\"lastName\" />\n      </AStepperFormPart>\n      <AStepperFormPart name=\"cj\" title=\"Current Job\">\n        <Typography>Current Job</Typography>\n        <ATextField name=\"company\" />\n        <ATextField name=\"jobTitle\" />\n        <ATextField name=\"role\" />\n      </AStepperFormPart>\n      <AStepperFormPart name=\"q\" title=\"Questionnaire\">\n        <Typography>Questionnaire</Typography>\n        <ATextField\n          name=\"likeCats\"\n          label=\"What do you know about cats? Do you like them? \"\n          variant=\"questionnaire\"\n        />\n        <ATextField\n          name=\"catDogVideo\"\n          label=\"Do you prefer watching cat videos or dog videos? How much time do you spend on that?\"\n          variant=\"questionnaire\"\n        />\n      </AStepperFormPart>\n    </AStepperForm>\n  );\n};\nexport default TestContentPanel2;\n","/Users/choonwheepeh/demo/src/components/testContentPanel3.js",["118","119"],"import React, { useState } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport ATextField from \"./aTextField\";\nimport ASearch from \"./aSearch\";\n\nconst TestContentPanel3 = (props) => {\n  const columnDefs = [\n    {\n      headerName: \"ID\",\n      field: \"id\",\n      sortable: true,\n      sortOrder: \"asc\",\n      filter: true,\n      checkbox: true,\n    },\n    {\n      headerName: \"First Name\",\n      field: \"firstName\",\n      sortable: true,\n      sortOrder: \"desc\",\n    },\n    { headerName: \"Last Name\", field: \"lastName\" },\n    { headerName: \"Address\", field: \"address\" },\n    { headerName: \"Country\", field: \"country\", filter: true },\n    { headerName: \"Phone\", field: \"phone\" },\n    { headerName: \"Email Address\", field: \"email\" },\n  ];\n\n  return (\n    <ASearch columnDefs={columnDefs} service=\"/customers\" size={5}>\n      <ATextField name=\"firstName\" />\n      <ATextField name=\"lastName\" />\n      <ATextField name=\"address\" />\n      <ATextField name=\"country\" />\n      <ATextField name=\"phone\" />\n      <ATextField name=\"email\" />\n    </ASearch>\n  );\n};\nexport default TestContentPanel3;\n","/Users/choonwheepeh/demo/src/components/aFastTable.js",["120","121"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Radio from \"@material-ui/core/Radio\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Box from \"@material-ui/core/Box\";\nimport AFastTableFilterOptionsMenu from \"./aFastTableFilterOptionsMenu\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    width: \"100%\",\n    borderCollapse: \"collapse\",\n    //border: \"thin solid #dddddd\",\n    borderRadius: theme.shape.borderRadius,\n    //borderSpacing: 0,\n    overflow: \"hidden\",\n    boxShadow: theme.shadows[5],\n  },\n\n  thead: {\n    \"& tr th, tr td\": {\n      backgroundColor: theme.palette.secondary.main,\n      textAlign: \"left\",\n      backgroundImage:\n        \"linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0,0,0, 0.15) 30%, rgba(0,0,0, 0.15) 30%, rgba(0,0,0, 0.08) 100%)\",\n      padding: \"4px 15px\",\n    },\n    \"& tr th:not(:last-child), tr td:not(:last-child)\": {\n      borderRight: \"thin solid rgb(77, 88, 106)\",\n    },\n    \"& tr th div, tr td div\": {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n  },\n  headerTypography: {\n    display: \"inline\",\n    color: theme.palette.secondary.contrastText,\n  },\n  headerIconColor: {\n    fill: theme.palette.secondary.contrastText,\n  },\n  headerRadioSpacer: {\n    padding: \"0 29px 0 0\",\n  },\n  headerCheckbox: {\n    color: theme.palette.secondary.contrastText,\n    padding: \"0 5px 0 0\",\n  },\n\n  unselectedRow: {\n    \"& td\": {\n      textAlign: \"left\",\n      padding: \"4px 15px\",\n      color: \"rgb(77, 88, 106)\",\n    },\n    \"&:not(:last-child) td\": {\n      borderBottom: \"thin solid rgb(229, 233, 238)\",\n    },\n    \"&:hover\": {\n      backgroundColor: \"rgb(224, 228, 236)\",\n    },\n    \"&:hover td p\": {\n      color: theme.palette.primary.contrastText,\n    },\n  },\n\n  selectedRow: {\n    backgroundColor: theme.palette.primary.light,\n    \"& td\": {\n      textAlign: \"left\",\n      padding: \"4px 15px\",\n      color: \"rgb(77, 88, 106)\",\n    },\n    \"&:not(:last-child) td\": {\n      borderBottom: \"thin solid rgb(229, 233, 238)\",\n    },\n    \"& td p\": {\n      color: theme.palette.secondary.contrastText,\n    },\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n    },\n    \"&:hover td p\": {\n      color: theme.palette.secondary.contrastText,\n    },\n    \"&:hover td .MuiCheckbox-root.Mui-checked\": {\n      color: theme.palette.success.dark,\n    },\n    \"&:hover td .MuiRadio-root.Mui-checked\": {\n      color: theme.palette.success.dark,\n    },\n  },\n\n  bodyTypography: {\n    display: \"inline\",\n  },\n\n  bodyRadio: {\n    padding: \"0 5px 0 0\",\n    color: theme.palette.secondary.main,\n    \"&.MuiRadio-root.Mui-checked\": {\n      color: theme.palette.success.main,\n    },\n  },\n\n  bodyCheckbox: {\n    padding: \"0 5px 0 0\",\n    color: theme.palette.secondary.main,\n    \"&.MuiCheckbox-root.Mui-checked\": {\n      color: theme.palette.success.main,\n    },\n  },\n\n  tfoot: {\n    \"& tr\": {\n      backgroundColor: \"rgb(46, 48, 73)\",\n      color: \"#ffffff\",\n    },\n  },\n}));\n\nconst fetchDataFromService = (service) => {\n  return [\n    { id: 2222, make: \"Mock Data\", model: \"From Service\", price: 22222222 },\n    { id: 1231, make: \"Toyota\", model: \"Celica\", price: 35000 },\n    { id: 1232, make: \"Ford\", model: \" Mondeo\", price: 32000 },\n    { id: 1233, make: \"Porsche\", model: \"Boxter\", price: 35000 },\n    { id: 1234, make: \"Mercedes Benz\", model: \"S Class\", price: 80000 },\n  ];\n};\n\nconst AFastTable = (props) => {\n  const { rowData, columnDefs, footer, rowSelection } = props;\n\n  let initCheckboxSelections = {};\n  columnDefs.forEach((columnDef) => {\n    if (columnDef.checkbox === true)\n      initCheckboxSelections[columnDef.field] = [];\n  });\n  const [checkboxSelections, setCheckboxSelections] = useState(\n    initCheckboxSelections\n  );\n  const [radioSelections, setRadioSelections] = useState({});\n  const [rowSelections, setRowSelections] = useState({\n    single: \"\",\n    multiple: [],\n  });\n  const [filterMenu, setFilterMenu] = useState({});\n\n  const classes = useStyles();\n\n  const handleCheckAllClick = (event) => {\n    event.stopPropagation();\n    let updatedCheckboxSelections = { ...checkboxSelections };\n    if (event.target.checked === true) {\n      updatedCheckboxSelections[event.target.name] = [];\n      for (let i = 0; i < rowData.length; i++) {\n        updatedCheckboxSelections[event.target.name].push(i.toString());\n      }\n    } else {\n      updatedCheckboxSelections[event.target.name] = [];\n    }\n    setCheckboxSelections(updatedCheckboxSelections);\n  };\n\n  const renderHeaders = () => {\n    const headerCells = columnDefs.map((columnDef, index) => {\n      let sortIconFragment = \"\";\n      if (columnDef.sortable !== undefined && columnDef.sortable === true) {\n        if (columnDef.sortOrder === \"asc\") {\n          sortIconFragment = (\n            <ArrowUpwardIcon className={classes.headerIconColor} />\n          );\n        } else if (columnDef.sortOrder === \"desc\") {\n          sortIconFragment = (\n            <ArrowDownwardIcon className={classes.headerIconColor} />\n          );\n        }\n      }\n\n      const handleFilterClick = (event) => {\n        setFilterMenu({\n          opened: event.currentTarget.id,\n          anchorEl: event.currentTarget,\n        });\n      };\n\n      const handleFilterClose = (event) => {\n        setFilterMenu({});\n      };\n\n      const handleFilterApply = (event) => {};\n\n      return (\n        <th key={\"_header_cell_\" + index}>\n          <div>\n            <span>\n              <div>\n                {columnDef.checkbox !== undefined &&\n                columnDef.checkbox === true ? (\n                  <Checkbox\n                    color=\"default\"\n                    className={classes.headerCheckbox}\n                    onClick={handleCheckAllClick}\n                    name={columnDef.field}\n                  />\n                ) : (\n                  \"\"\n                )}\n                {columnDef.radio !== undefined && columnDef.radio === true ? (\n                  <Box className={classes.headerRadioSpacer} />\n                ) : (\n                  \"\"\n                )}\n                <Typography className={classes.headerTypography}>\n                  {columnDef.headerName}\n                </Typography>\n              </div>\n            </span>\n            <span>\n              {sortIconFragment}\n              {columnDef.filter !== undefined && columnDef.filter === true ? (\n                <React.Fragment>\n                  <MenuIcon\n                    className={classes.headerIconColor}\n                    onClick={handleFilterClick}\n                    id={\"_filter_\" + columnDef.field}\n                  />\n                  <AFastTableFilterOptionsMenu\n                    field={columnDef.field}\n                    optionValues={[\"abc\", \"def\", \"ghi\", \"jkl\", \"mno\", \"pqr\"]}\n                    open={filterMenu.opened === \"_filter_\" + columnDef.field}\n                    anchorEl={filterMenu.anchorEl}\n                    onClose={handleFilterClose}\n                    onApply={handleFilterApply}\n                  />\n                </React.Fragment>\n              ) : (\n                \"\"\n              )}\n            </span>\n          </div>\n        </th>\n      );\n    });\n    return <tr key=\"_header\">{headerCells}</tr>;\n  };\n\n  const renderFooter = () => {\n    if (footer !== undefined) {\n      return (\n        <tfoot className={classes.tfoot}>\n          <tr>\n            <td colSpan={columnDefs.length}>{footer()}</td>\n          </tr>\n        </tfoot>\n      );\n    }\n  };\n\n  const handleRadioClick = (event) => {\n    event.stopPropagation();\n    let updatedRadioSelections = { ...radioSelections };\n    updatedRadioSelections[event.target.name] = event.target.value;\n    setRadioSelections(updatedRadioSelections);\n  };\n\n  const handleCheckboxClick = (event) => {\n    event.stopPropagation();\n    let updatedCheckboxSelections = { ...checkboxSelections };\n\n    if (event.target.checked === true) {\n      if (\n        updatedCheckboxSelections[event.target.name].indexOf(\n          event.target.value.toString()\n        ) === -1\n      )\n        updatedCheckboxSelections[event.target.name].push(event.target.value);\n    } else {\n      updatedCheckboxSelections[event.target.name].splice(\n        updatedCheckboxSelections[event.target.name].indexOf(\n          event.target.value.toString()\n        ),\n        1\n      );\n    }\n    setCheckboxSelections(updatedCheckboxSelections);\n  };\n\n  const handleRowClick = (event) => {\n    if (rowSelection === \"single\") {\n      let updatedRowSelections = { ...rowSelections };\n      if (rowSelections.single === event.currentTarget.id) {\n        updatedRowSelections.single = \"\";\n        setRowSelections(updatedRowSelections);\n      } else {\n        updatedRowSelections.single = event.currentTarget.id;\n        setRowSelections(updatedRowSelections);\n      }\n    } else if (rowSelection === \"multiple\") {\n      let updatedRowSelections = { ...rowSelections };\n      if (\n        updatedRowSelections.multiple.indexOf(event.currentTarget.id) === -1\n      ) {\n        updatedRowSelections.multiple.push(event.currentTarget.id);\n      } else {\n        updatedRowSelections.multiple.splice(\n          updatedRowSelections.multiple.indexOf(event.currentTarget.id),\n          1\n        );\n      }\n      setRowSelections(updatedRowSelections);\n    }\n  };\n\n  const renderRows = () => {\n    if (rowData.length === 0) {\n      return (\n        <tr>\n          <td colSpan={columnDefs.length}>No Rows Found.</td>\n        </tr>\n      );\n    }\n\n    return rowData.map((row, rowIndex) => {\n      let trProps = {};\n      if (\n        rowSelection === \"single\" &&\n        rowSelections.single === \"_row_\" + rowIndex\n      ) {\n        trProps.className = classes.selectedRow;\n      } else if (\n        rowSelection === \"multiple\" &&\n        rowSelections.multiple.includes(\"_row_\" + rowIndex)\n      ) {\n        trProps.className = classes.selectedRow;\n      } else {\n        trProps.className = classes.unselectedRow;\n      }\n      const cells = columnDefs.map((columnDef, colIndex) => {\n        return (\n          <td key={\"_cell_\" + rowIndex + \"_\" + colIndex}>\n            {columnDef.checkbox !== undefined && columnDef.checkbox === true ? (\n              <Checkbox\n                checked={checkboxSelections[columnDef.field]?.includes(\n                  rowIndex.toString()\n                )}\n                onClick={handleCheckboxClick}\n                name={columnDef.field}\n                color=\"default\"\n                value={rowIndex}\n                className={classes.bodyCheckbox}\n              />\n            ) : (\n              \"\"\n            )}\n            {columnDef.radio !== undefined && columnDef.radio === true ? (\n              <Radio\n                checked={\n                  parseInt(radioSelections[columnDef.field]) === rowIndex\n                }\n                onClick={handleRadioClick}\n                name={columnDef.field}\n                color=\"default\"\n                value={rowIndex}\n                className={classes.bodyRadio}\n              />\n            ) : (\n              \"\"\n            )}\n            <Typography className={classes.bodyTypography}>\n              {row[columnDef.field]}\n            </Typography>\n          </td>\n        );\n      });\n      return (\n        <tr\n          {...trProps}\n          onClick={handleRowClick}\n          id={\"_row_\" + rowIndex}\n          key={\"_row_\" + rowIndex}\n        >\n          {cells}\n        </tr>\n      );\n    });\n  };\n\n  return (\n    <table className={classes.table}>\n      <thead className={classes.thead}>{renderHeaders()}</thead>\n      <tbody className={classes.tbody}>{renderRows()}</tbody>\n      {renderFooter()}\n    </table>\n  );\n};\n\nexport default AFastTable;\n","/Users/choonwheepeh/demo/src/components/aFastTableFilterOptionsMenu.js",["122"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Box from \"@material-ui/core/Box\";\n\nconst useStyles = makeStyles((theme) => ({\n  formContainer: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n  },\n\n  checkboxContainer: {\n    display: \"inline-block\",\n    width: \"50%\",\n  },\n\n  vSpacer: { height: \"10px\" },\n\n  actionContainer: { display: \"flex\", justifyContent: \"space-between\" },\n}));\n\nconst AFastTableFilterOptionsMenu = (props) => {\n  const classes = useStyles();\n\n  const menuProps = {\n    getContentAnchorEl: null,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\",\n    },\n    transformOrigin: { vertical: \"top\", horizontal: \"left\" },\n    PaperProps: {\n      style: {\n        width: \"300px\",\n        padding: \"0px 20px 10px 20px\",\n      },\n    },\n  };\n  if (props.onClose !== undefined) menuProps.onClose = props.onClose;\n  if (props.open !== undefined) menuProps.open = props.open;\n  if (props.anchorEl !== undefined) menuProps.anchorEl = props.anchorEl;\n\n  return (\n    <Menu id={\"_filter_menu_\" + props.field} {...menuProps}>\n      <Box className=\"formContainer\">\n        {props.optionValues.map((optionValue, index) => {\n          return (\n            <Box\n              key={\"options\" + props.field + \"_\" + index}\n              className={classes.checkboxContainer}\n            >\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    defaultChecked\n                    name={\"_filter_options_\" + props.field}\n                    value={optionValue}\n                    color=\"primary\"\n                  />\n                }\n                label={optionValue}\n              />\n            </Box>\n          );\n        })}\n      </Box>\n      <Box className={classes.vSpacer} />\n      <Box className={classes.actionContainer}>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => {\n            props.onClose();\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            //props.onApply();\n            props.onClose();\n          }}\n        >\n          Apply\n        </Button>\n      </Box>\n    </Menu>\n  );\n};\n\nexport default AFastTableFilterOptionsMenu;\n","/Users/choonwheepeh/demo/src/components/aFastTableFilterOptionsDialog.js",[],"/Users/choonwheepeh/demo/src/components/aSearchPaginationBar.js",[],"/Users/choonwheepeh/demo/src/components/aSearch.js",["123","124"],"import React, { useState, useEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AFastTable from \"./aFastTable\";\nimport ASearchPaginationBar from \"./aSearchPaginationBar\";\nimport { cloneChildrenWithDefaultModeProps } from \"./utils\";\n\nconst ASearch = (props) => {\n  const { columnDefs, service, fetchDataHandler, size, maxPages } = props;\n\n  const [data, setData] = useState({\n    page: 0,\n    size: size === undefined ? 20 : size,\n    totalPages: 5,\n    rowData: [],\n  });\n\n  const fetchData = (page) => {\n    //mock method...to be implemented...\n\n    if (service !== undefined) {\n      fetch(\"/customers?page=\" + page + \"&size=\" + data.size)\n        .then(\n          (response) => response.json(),\n          (response) => console.log(response.json())\n        )\n        .then((resObj) => {\n          console.log(JSON.stringify(resObj));\n          console.log(\n            \"r:\" + resObj.number + \"|\" + resObj.size + \"|\" + resObj.totalPages\n          );\n          setData({\n            page: resObj.number,\n            size: resObj.size,\n            totalPages: resObj.totalPages,\n            rowData: resObj.content,\n          });\n        });\n    } else if (fetchDataHandler !== undefined) {\n      //use handler from parent to fetchRowData\n      fetchDataHandler();\n    }\n  };\n\n  const handleGoToPage = (event, page) => {\n    fetchData(page);\n  };\n\n  const childrenWithAdditionalProps = cloneChildrenWithDefaultModeProps(props);\n\n  useEffect(() => {\n    fetchData(0);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Box style={{ margin: \"20px\" }}>\n        {childrenWithAdditionalProps}\n        <Box style={{ height: \"20px\" }} />\n        <AFastTable\n          columnDefs={columnDefs}\n          rowData={data.rowData}\n          rowSelection=\"multiple\"\n        />\n      </Box>\n      <ASearchPaginationBar\n        totalPages={data.totalPages}\n        page={data.page}\n        maxPages={maxPages === undefined ? 9 : maxPages}\n        onGoToPage={handleGoToPage}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default ASearch;\n",{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"133","line":4,"column":7,"nodeType":"131","messageId":"132","endLine":4,"endColumn":17},{"ruleId":"134","severity":2,"message":"135","line":8,"column":16,"nodeType":"131","messageId":"136","endLine":8,"endColumn":26},{"ruleId":"129","severity":1,"message":"137","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":20},{"ruleId":"129","severity":1,"message":"138","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":24},{"ruleId":"129","severity":1,"message":"139","line":7,"column":8,"nodeType":"131","messageId":"132","endLine":7,"endColumn":25},{"ruleId":"129","severity":1,"message":"140","line":50,"column":7,"nodeType":"131","messageId":"132","endLine":50,"endColumn":18},{"ruleId":"129","severity":1,"message":"141","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":13},{"ruleId":"129","severity":1,"message":"142","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":12},{"ruleId":"129","severity":1,"message":"141","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":13},{"ruleId":"129","severity":1,"message":"143","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":25},{"ruleId":"129","severity":1,"message":"142","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":12},{"ruleId":"129","severity":1,"message":"137","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":20},{"ruleId":"144","severity":1,"message":"145","line":50,"column":6,"nodeType":"146","endLine":50,"endColumn":8,"suggestions":"147"},{"ruleId":"129","severity":1,"message":"130","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"148","line":7,"column":8,"nodeType":"131","messageId":"132","endLine":7,"endColumn":16},{"ruleId":"129","severity":1,"message":"130","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"149","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":14},{"ruleId":"129","severity":1,"message":"150","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"151","line":126,"column":7,"nodeType":"131","messageId":"132","endLine":126,"endColumn":27},{"ruleId":"129","severity":1,"message":"152","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":17},{"ruleId":"129","severity":1,"message":"153","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":18},{"ruleId":"144","severity":1,"message":"154","line":53,"column":6,"nodeType":"146","endLine":53,"endColumn":8,"suggestions":"155"},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ATextfield' is assigned a value but never used.","no-undef","'ATextField' is not defined.","undef","'withStyles' is defined but never used.","'TestContentPanel' is defined but never used.","'TestContentPanel2' is defined but never used.","'navbarProps' is assigned a value but never used.","'Paper' is defined but never used.","'Grid' is defined but never used.","'SportsKabaddiIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'reviewBeforeSubmit' and 'stepTitles'. Either include them or remove the dependency array.","ArrayExpression",["158"],"'ASection' is defined but never used.","'Button' is defined but never used.","'useEffect' is defined but never used.","'fetchDataFromService' is assigned a value but never used.","'FormGroup' is defined but never used.","'Typography' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["159"],"no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [reviewBeforeSubmit, stepTitles]",{"range":"164","text":"165"},"Update the dependencies array to be: [fetchData]",{"range":"166","text":"167"},[1637,1639],"[reviewBeforeSubmit, stepTitles]",[1546,1548],"[fetchData]"]