{"ast":null,"code":"var _jsxFileName = \"/Users/choonwheepeh/demo/src/components/aFastTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  table: {\n    width: \"100%\",\n    border: 0,\n    cellSpacing: 0,\n    cellPadding: 0\n  },\n  headerRow: {\n    backgroundImage: \"linear-gradient(to bottom, #ffffff, #bbbbbb, #dddddd)\",\n    border: 0\n  },\n  headerCell: {\n    border: 0\n  },\n  row: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\"\n    }\n  },\n  cell: {\n    borderBottom: \"1px solid #cccccc\"\n  }\n}));\n\nconst fetchDataFromService = service => {\n  return [{\n    id: 2222,\n    make: \"Mock Data\",\n    model: \"From Service\",\n    price: 22222222\n  }, {\n    id: 1231,\n    make: \"Toyota\",\n    model: \"Celica\",\n    price: 35000\n  }, {\n    id: 1232,\n    make: \"Ford\",\n    model: \" Mondeo\",\n    price: 32000\n  }, {\n    id: 1233,\n    make: \"Porsche\",\n    model: \"Boxter\",\n    price: 35000\n  }, {\n    id: 1234,\n    make: \"Mercedes Benz\",\n    model: \"S Class\",\n    price: 80000\n  }];\n};\n\nconst AFastTable = props => {\n  _s();\n\n  const [rowData, setRowData] = useState(props.rowData);\n  const classes = useStyles();\n  useEffect(() => {\n    if (props.service !== undefined) {\n      let d = fetchDataFromService(props.service);\n      setRowData(d);\n    }\n  }, []); //trigger only once after first render\n\n  const renderHeaders = () => {\n    const headerCells = props.columnDefs.map((columnDef, index) => {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: columnDef.headerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, \"_header_cell_\" + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: classes.headerRow,\n      children: headerCells\n    }, \"_header\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderRows = () => {\n    if (rowData.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        colSpan: props.columnDef.length,\n        children: \"No Rows Found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 14\n      }, this);\n    }\n\n    return rowData.map((row, rowIndex) => {\n      const cells = props.columnDefs.map((columnDef, cellIndex) => {\n        return /*#__PURE__*/_jsxDEV(\"td\", {\n          className: classes.cell,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: row[columnDef.field]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, \"_cell_\" + cellIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this);\n      });\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: classes.row,\n        children: cells\n      }, \"_row_\" + rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: classes.table,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: [renderHeaders(), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: renderRows()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AFastTable, \"vgf+8GkO71DnKyISxlIKaLvSTLo=\", false, function () {\n  return [useStyles];\n});\n\n_c = AFastTable;\nexport default AFastTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"AFastTable\");","map":{"version":3,"sources":["/Users/choonwheepeh/demo/src/components/aFastTable.js"],"names":["React","useEffect","useState","makeStyles","Typography","useStyles","theme","table","width","border","cellSpacing","cellPadding","headerRow","backgroundImage","headerCell","row","backgroundColor","cell","borderBottom","fetchDataFromService","service","id","make","model","price","AFastTable","props","rowData","setRowData","classes","undefined","d","renderHeaders","headerCells","columnDefs","map","columnDef","index","headerName","renderRows","length","rowIndex","cells","cellIndex","field"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    width: \"100%\",\n    border: 0,\n    cellSpacing: 0,\n    cellPadding: 0,\n  },\n\n  headerRow: {\n    backgroundImage: \"linear-gradient(to bottom, #ffffff, #bbbbbb, #dddddd)\",\n    border: 0,\n  },\n  headerCell: {\n    border: 0,\n  },\n\n  row: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n    },\n  },\n\n  cell: {\n    borderBottom: \"1px solid #cccccc\",\n  },\n}));\n\nconst fetchDataFromService = (service) => {\n  return [\n    { id: 2222, make: \"Mock Data\", model: \"From Service\", price: 22222222 },\n    { id: 1231, make: \"Toyota\", model: \"Celica\", price: 35000 },\n    { id: 1232, make: \"Ford\", model: \" Mondeo\", price: 32000 },\n    { id: 1233, make: \"Porsche\", model: \"Boxter\", price: 35000 },\n    { id: 1234, make: \"Mercedes Benz\", model: \"S Class\", price: 80000 },\n  ];\n};\n\nconst AFastTable = (props) => {\n  const [rowData, setRowData] = useState(props.rowData);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (props.service !== undefined) {\n      let d = fetchDataFromService(props.service);\n      setRowData(d);\n    }\n  }, []); //trigger only once after first render\n\n  const renderHeaders = () => {\n    const headerCells = props.columnDefs.map((columnDef, index) => {\n      return (\n        <th key={\"_header_cell_\" + index}>\n          <Typography>{columnDef.headerName}</Typography>\n        </th>\n      );\n    });\n    return (\n      <tr key=\"_header\" className={classes.headerRow}>\n        {headerCells}\n      </tr>\n    );\n  };\n\n  const renderRows = () => {\n    if (rowData.length === 0) {\n      return <td colSpan={props.columnDef.length}>No Rows Found.</td>;\n    }\n    return rowData.map((row, rowIndex) => {\n      const cells = props.columnDefs.map((columnDef, cellIndex) => {\n        return (\n          <td key={\"_cell_\" + cellIndex} className={classes.cell}>\n            <Typography>{row[columnDef.field]}</Typography>\n          </td>\n        );\n      });\n      return (\n        <tr key={\"_row_\" + rowIndex} className={classes.row}>\n          {cells}\n        </tr>\n      );\n    });\n  };\n\n  return (\n    <table className={classes.table}>\n      <thead>{renderHeaders()} </thead>\n      <tbody>{renderRows()}</tbody>\n    </table>\n  );\n};\n\nexport default AFastTable;\n"]},"metadata":{},"sourceType":"module"}