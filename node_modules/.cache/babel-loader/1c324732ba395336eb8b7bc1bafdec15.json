{"ast":null,"code":"var _jsxFileName = \"/Users/choonwheepeh/demo/src/components/utils.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function toLabelCase(str) {\n  var _str$charAt;\n\n  return (str === null || str === void 0 ? void 0 : (_str$charAt = str.charAt(0)) === null || _str$charAt === void 0 ? void 0 : _str$charAt.toUpperCase()) + (str === null || str === void 0 ? void 0 : str.replace(/([A-Z])/g, \" $1\").slice(1));\n}\nexport function toCamelCase(str) {\n  var _str$charAt2;\n\n  return (str === null || str === void 0 ? void 0 : (_str$charAt2 = str.charAt(0)) === null || _str$charAt2 === void 0 ? void 0 : _str$charAt2.toLowerCase()) + (str === null || str === void 0 ? void 0 : str.replace(\" \", \"_\").slice(1));\n}\nexport function generateName(name, label) {\n  return name === undefined ? label === undefined ? \"field\" + Date.now() : toCamelCase(label) : name;\n}\nexport function generateLabel(label, name) {\n  return label === undefined ? NamedNodeMap === undefined ? \"\" : toLabelCase(name) : label;\n}\nexport function formDataToObject(formData) {\n  let jsonObject = {};\n\n  for (const [key, value] of formData) {\n    jsonObject[key] = value;\n  }\n\n  return jsonObject;\n}\nexport function cloneChildrenWithAdditionalProps(props, propsToAdd) {\n  return React.Children.toArray(props.children).filter(n => n) //remove nulls\n  .map(child => {\n    return /*#__PURE__*/React.cloneElement(child, propsToAdd);\n  });\n}\nexport function optionsFilter(filterValues) {\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    component: \"fieldset\",\n    children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n      \"aria-label\": \"gender\",\n      defaultValue: \"female\",\n      name: \"radio-buttons-group\",\n      children: [\"filterValues.map( (filterValue) =\", \" \", /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: \"filterValue\",\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 22\n        }, this),\n        label: \"filterValue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), \" \", \");\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/choonwheepeh/demo/src/components/utils.js"],"names":["React","toLabelCase","str","charAt","toUpperCase","replace","slice","toCamelCase","toLowerCase","generateName","name","label","undefined","Date","now","generateLabel","NamedNodeMap","formDataToObject","formData","jsonObject","key","value","cloneChildrenWithAdditionalProps","props","propsToAdd","Children","toArray","children","filter","n","map","child","cloneElement","optionsFilter","filterValues"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AAAA;;AAC/B,SACE,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,2BAAAA,GAAG,CAAEC,MAAL,CAAY,CAAZ,6DAAgBC,WAAhB,OAAgCF,GAAhC,aAAgCA,GAAhC,uBAAgCA,GAAG,CAAEG,OAAL,CAAa,UAAb,EAAyB,KAAzB,EAAgCC,KAAhC,CAAsC,CAAtC,CAAhC,CADF;AAGD;AAED,OAAO,SAASC,WAAT,CAAqBL,GAArB,EAA0B;AAAA;;AAC/B,SAAO,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,4BAAAA,GAAG,CAAEC,MAAL,CAAY,CAAZ,+DAAgBK,WAAhB,OAAgCN,GAAhC,aAAgCA,GAAhC,uBAAgCA,GAAG,CAAEG,OAAL,CAAa,GAAb,EAAkB,GAAlB,EAAuBC,KAAvB,CAA6B,CAA7B,CAAhC,CAAP;AACD;AAED,OAAO,SAASG,YAAT,CAAsBC,IAAtB,EAA4BC,KAA5B,EAAmC;AACxC,SAAOD,IAAI,KAAKE,SAAT,GACHD,KAAK,KAAKC,SAAV,GACE,UAAUC,IAAI,CAACC,GAAL,EADZ,GAEEP,WAAW,CAACI,KAAD,CAHV,GAIHD,IAJJ;AAKD;AAED,OAAO,SAASK,aAAT,CAAuBJ,KAAvB,EAA8BD,IAA9B,EAAoC;AACzC,SAAOC,KAAK,KAAKC,SAAV,GACHI,YAAY,KAAKJ,SAAjB,GACE,EADF,GAEEX,WAAW,CAACS,IAAD,CAHV,GAIHC,KAJJ;AAKD;AAED,OAAO,SAASM,gBAAT,CAA0BC,QAA1B,EAAoC;AACzC,MAAIC,UAAU,GAAG,EAAjB;;AACA,OAAK,MAAM,CAACC,GAAD,EAAMC,KAAN,CAAX,IAA2BH,QAA3B,EAAqC;AACnCC,IAAAA,UAAU,CAACC,GAAD,CAAV,GAAkBC,KAAlB;AACD;;AACD,SAAOF,UAAP;AACD;AAED,OAAO,SAASG,gCAAT,CAA0CC,KAA1C,EAAiDC,UAAjD,EAA6D;AAClE,SAAOxB,KAAK,CAACyB,QAAN,CAAeC,OAAf,CAAuBH,KAAK,CAACI,QAA7B,EACJC,MADI,CACIC,CAAD,IAAOA,CADV,EACa;AADb,GAEJC,GAFI,CAECC,KAAD,IAAW;AACd,wBAAO/B,KAAK,CAACgC,YAAN,CAAmBD,KAAnB,EAA0BP,UAA1B,CAAP;AACD,GAJI,CAAP;AAKD;AAED,OAAO,SAASS,aAAT,CAAuBC,YAAvB,EAAqC;AAC1C,sBACE,QAAC,WAAD;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAA,2BACE,QAAC,UAAD;AACE,oBAAW,QADb;AAEE,MAAA,YAAY,EAAC,QAFf;AAGE,MAAA,IAAI,EAAC,qBAHP;AAAA,sDAKoC,GALpC,eAOI,QAAC,gBAAD;AACE,QAAA,KAAK,EAAC,aADR;AAEE,QAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAFX;AAGE,QAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,cAPJ,EAYI,GAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD","sourcesContent":["import React from \"react\";\n\nexport function toLabelCase(str) {\n  return (\n    str?.charAt(0)?.toUpperCase() + str?.replace(/([A-Z])/g, \" $1\").slice(1)\n  );\n}\n\nexport function toCamelCase(str) {\n  return str?.charAt(0)?.toLowerCase() + str?.replace(\" \", \"_\").slice(1);\n}\n\nexport function generateName(name, label) {\n  return name === undefined\n    ? label === undefined\n      ? \"field\" + Date.now()\n      : toCamelCase(label)\n    : name;\n}\n\nexport function generateLabel(label, name) {\n  return label === undefined\n    ? NamedNodeMap === undefined\n      ? \"\"\n      : toLabelCase(name)\n    : label;\n}\n\nexport function formDataToObject(formData) {\n  let jsonObject = {};\n  for (const [key, value] of formData) {\n    jsonObject[key] = value;\n  }\n  return jsonObject;\n}\n\nexport function cloneChildrenWithAdditionalProps(props, propsToAdd) {\n  return React.Children.toArray(props.children)\n    .filter((n) => n) //remove nulls\n    .map((child) => {\n      return React.cloneElement(child, propsToAdd);\n    });\n}\n\nexport function optionsFilter(filterValues) {\n  return (\n    <FormControl component=\"fieldset\">\n      <RadioGroup\n        aria-label=\"gender\"\n        defaultValue=\"female\"\n        name=\"radio-buttons-group\"\n      >\n        filterValues.map( (filterValue) ={\" \"}\n        {\n          <FormControlLabel\n            value=\"filterValue\"\n            control={<Radio />}\n            label=\"filterValue\"\n          />\n        }{\" \"}\n        );\n      </RadioGroup>\n    </FormControl>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}