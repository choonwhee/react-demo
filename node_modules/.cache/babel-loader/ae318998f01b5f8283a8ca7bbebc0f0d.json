{"ast":null,"code":"var _jsxFileName = \"/Users/choonwheepeh/demo/src/components/aFastTable.js\",\n    _s = $RefreshSig$();\n\nimport { Typography } from \"@material-ui/core\";\nimport React, { makeStyles, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    table: {\n      cursor: \"default\"\n    },\n    \"& .MuiAccordionDetails-root:hover\": {\n      cursor: \"default\"\n    }\n  }\n}));\n\nconst fetchDataFromService = service => {\n  return [{\n    id: 2222,\n    make: \"Mock Data\",\n    model: \"From Service\",\n    price: 22222222\n  }, {\n    id: 1231,\n    make: \"Toyota\",\n    model: \"Celica\",\n    price: 35000\n  }, {\n    id: 1232,\n    make: \"Ford\",\n    model: \" Mondeo\",\n    price: 32000\n  }, {\n    id: 1233,\n    make: \"Porsche\",\n    model: \"Boxter\",\n    price: 35000\n  }, {\n    id: 1234,\n    make: \"Mercedes Benz\",\n    model: \"S Class\",\n    price: 80000\n  }];\n};\n\nconst AFastTable = props => {\n  _s();\n\n  const [rowData, setRowData] = useState(props.rowData);\n  useEffect(() => {\n    if (props.service !== undefined) {\n      let d = fetchDataFromService(props.service);\n      setRowData(d);\n    }\n  }, []); //trigger only once after first render\n\n  const renderHeaders = () => {\n    return props.columnDefs.map((columnDef, index) => {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: columnDef.headerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, \"_header_cell_\" + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const renderRows = () => {\n    if (rowData.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        colSpan: props.columnDef.length,\n        children: \"No Rows Found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this);\n    }\n\n    return rowData.map((row, rowIndex) => {\n      const cells = props.columnDefs.map((columnDef, cellIndex) => {\n        return /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: row[columnDef.name]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, \"_cell_\" + cellIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this);\n      });\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: cells\n      }, \"_row_\" + rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"classes.table\",\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      children: renderHeaders()\n    }, \"_header\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), \" \", renderRows()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AFastTable, \"N26JYbxrmOP8CIKV6khUFmzXdAg=\");\n\n_c = AFastTable;\nexport default AFastTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"AFastTable\");","map":{"version":3,"sources":["/Users/choonwheepeh/demo/src/components/aFastTable.js"],"names":["Typography","React","makeStyles","useEffect","useState","useStyles","theme","root","table","cursor","fetchDataFromService","service","id","make","model","price","AFastTable","props","rowData","setRowData","undefined","d","renderHeaders","columnDefs","map","columnDef","index","headerName","renderRows","length","row","rowIndex","cells","cellIndex","name"],"mappings":"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","sourcesContent":["import { Typography } from \"@material-ui/core\";\nimport React, { makeStyles, useEffect, useState } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    table: {\n      cursor: \"default\",\n    },\n    \"& .MuiAccordionDetails-root:hover\": {\n      cursor: \"default\",\n    },\n  },\n}));\n\nconst fetchDataFromService = (service) => {\n  return [\n    { id: 2222, make: \"Mock Data\", model: \"From Service\", price: 22222222 },\n    { id: 1231, make: \"Toyota\", model: \"Celica\", price: 35000 },\n    { id: 1232, make: \"Ford\", model: \" Mondeo\", price: 32000 },\n    { id: 1233, make: \"Porsche\", model: \"Boxter\", price: 35000 },\n    { id: 1234, make: \"Mercedes Benz\", model: \"S Class\", price: 80000 },\n  ];\n};\n\nconst AFastTable = (props) => {\n  const [rowData, setRowData] = useState(props.rowData);\n\n  useEffect(() => {\n    if (props.service !== undefined) {\n      let d = fetchDataFromService(props.service);\n      setRowData(d);\n    }\n  }, []); //trigger only once after first render\n\n  const renderHeaders = () => {\n    return props.columnDefs.map((columnDef, index) => {\n      return (\n        <th key={\"_header_cell_\" + index}>\n          <Typography>{columnDef.headerName}</Typography>\n        </th>\n      );\n    });\n  };\n\n  const renderRows = () => {\n    if (rowData.length === 0) {\n      return <td colSpan={props.columnDef.length}>No Rows Found.</td>;\n    }\n    return rowData.map((row, rowIndex) => {\n      const cells = props.columnDefs.map((columnDef, cellIndex) => {\n        return (\n          <td key={\"_cell_\" + cellIndex}>\n            <Typography>{row[columnDef.name]}</Typography>\n          </td>\n        );\n      });\n      return <tr key={\"_row_\" + rowIndex}>{cells}</tr>;\n    });\n  };\n\n  return (\n    <table className=\"classes.table\">\n      <tr key=\"_header\">{renderHeaders()}</tr> {renderRows()}\n    </table>\n  );\n};\n\nexport default AFastTable;\n"]},"metadata":{},"sourceType":"module"}