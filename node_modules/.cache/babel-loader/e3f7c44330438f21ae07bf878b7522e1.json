{"ast":null,"code":"var _jsxFileName = \"/Users/choonwheepeh/demo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Box from \"@material-ui/core/Box\";\nimport AForm from \"./components/aForm\";\nimport ASection from \"./components/aSection\";\nimport ATextField from \"./components/aTextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = useState(\"edit\");\n  const [variant, setVariant] = useState(\"classic\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      width: \"800px\",\n      children: /*#__PURE__*/_jsxDEV(ASection, {\n        title: \"Test Form\",\n        collapsable: false,\n        children: /*#__PURE__*/_jsxDEV(AForm, {\n          defaultMode: mode,\n          defaultModeMapping: {\n            approval: \"readOnly\",\n            admin: \"edit\"\n          },\n          defaultVariant: variant,\n          children: [/*#__PURE__*/_jsxDEV(ATextField, {\n            name: \"id\",\n            label: \"ID\",\n            defaultValue: \"123\",\n            modeMapping: {\n              update: \"readOnly\",\n              admin: \"readOnly\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ATextField, {\n            name: \"hiddenField\",\n            defaultValue: \"secret\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ATextField, {\n            name: \"firstName\",\n            defaultValue: \"abc\",\n            required: true,\n            info: \"This is some information for you!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ATextField, {\n            name: \"lastName\",\n            defaultValue: \"def\",\n            required: true,\n            error: true,\n            helperText: \"Text to help you with!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ATextField, {\n            name: \"address1\",\n            label: \"Address\",\n            autocompleteOptions: [{\n              label: \"Label 1\",\n              value: \"Value 1\"\n            }, {\n              label: \"Label 2\",\n              value: \"Value 2\"\n            }],\n            autocompleteGetOptionLabel: option => option.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ATextField, {\n            label: \"Star Wars API\",\n            autocompleteService: \"test\",\n            autocompleteGetOptionLabel: option => option.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ATextField, {\n            label: \"Comments\",\n            multiline: true,\n            rows: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ATextField, {\n            label: \"Comments\",\n            multiline: true,\n            rows: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ATextField, {\n            name: \"question1\",\n            label: \"Q1. Whats is your name? Please enter your full name and not your nickname. Please share your life story and all your achievements in life.\",\n            multiline: true,\n            rows: \"4\",\n            variant: \"questionnaire\",\n            info: \"test test test test info!!!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              let newMode;\n              if (mode === \"edit\") newMode = \"disabled\";else if (mode === \"disabled\") newMode = \"readOnly\";else if (mode === \"readOnly\") newMode = \"hidden\";else if (mode === \"hidden\") newMode = \"create\";else if (mode === \"create\") newMode = \"read\";else if (mode === \"read\") newMode = \"view\";else if (mode === \"view\") newMode = \"update\";else if (mode === \"update\") newMode = \"approval\";else if (mode === \"approval\") newMode = \"admin\";else if (mode === \"admin\") newMode = undefined;else if (mode === undefined) newMode = \"edit\";\n              setMode(newMode);\n            },\n            children: [\"Toggle Default Form Mode :\", mode === undefined ? \"undefined\" : mode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              let newVariant;\n              if (variant === \"classic\") newVariant = \"questionnaire\";else if (variant === \"questionnaire\") newVariant = \"standard\";else if (variant === \"standard\") newVariant = \"filled\";else if (variant === \"filled\") newVariant = \"outlined\";else if (variant === \"outlined\") newVariant = \"classic\";\n              setVariant(newVariant);\n            },\n            children: [\"Toggle Default Variant : \", variant]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"AdgG0sKHrNVcZjxk1IpSGhCdrUg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/choonwheepeh/demo/src/App.js"],"names":["React","useState","Box","AForm","ASection","ATextField","Button","App","mode","setMode","variant","setVariant","approval","admin","update","label","value","option","name","newMode","undefined","newVariant"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport Box from \"@material-ui/core/Box\";\nimport AForm from \"./components/aForm\";\nimport ASection from \"./components/aSection\";\nimport ATextField from \"./components/aTextField\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"edit\");\n  const [variant, setVariant] = useState(\"classic\");\n  return (\n    <div className=\"App\">\n      <Box width=\"800px\">\n        <ASection title=\"Test Form\" collapsable={false}>\n          <AForm\n            defaultMode={mode}\n            defaultModeMapping={{ approval: \"readOnly\", admin: \"edit\" }}\n            defaultVariant={variant}\n          >\n            <ATextField\n              name=\"id\"\n              label=\"ID\"\n              defaultValue=\"123\"\n              modeMapping={{ update: \"readOnly\", admin: \"readOnly\" }}\n            />\n            <ATextField name=\"hiddenField\" defaultValue=\"secret\" />\n            <ATextField\n              name=\"firstName\"\n              defaultValue=\"abc\"\n              required\n              info=\"This is some information for you!\"\n            />\n            <ATextField\n              name=\"lastName\"\n              defaultValue=\"def\"\n              required\n              error\n              helperText=\"Text to help you with!\"\n            />\n            <ATextField\n              name=\"address1\"\n              label=\"Address\"\n              autocompleteOptions={[\n                { label: \"Label 1\", value: \"Value 1\" },\n                { label: \"Label 2\", value: \"Value 2\" },\n              ]}\n              autocompleteGetOptionLabel={(option) => option.value}\n            />\n            <ATextField\n              label=\"Star Wars API\"\n              autocompleteService=\"test\"\n              autocompleteGetOptionLabel={(option) => option.name}\n            />\n            <ATextField label=\"Comments\" multiline rows=\"4\" />\n            <ATextField label=\"Comments\" multiline rows=\"4\" />\n            <ATextField\n              name=\"question1\"\n              label=\"Q1. Whats is your name? Please enter your full name and not your nickname. Please share your life story and all your achievements in life.\"\n              multiline\n              rows=\"4\"\n              variant=\"questionnaire\"\n              info=\"test test test test info!!!!\"\n            />\n\n            <Button type=\"submit\">Submit</Button>\n            <Button\n              onClick={() => {\n                let newMode;\n                if (mode === \"edit\") newMode = \"disabled\";\n                else if (mode === \"disabled\") newMode = \"readOnly\";\n                else if (mode === \"readOnly\") newMode = \"hidden\";\n                else if (mode === \"hidden\") newMode = \"create\";\n                else if (mode === \"create\") newMode = \"read\";\n                else if (mode === \"read\") newMode = \"view\";\n                else if (mode === \"view\") newMode = \"update\";\n                else if (mode === \"update\") newMode = \"approval\";\n                else if (mode === \"approval\") newMode = \"admin\";\n                else if (mode === \"admin\") newMode = undefined;\n                else if (mode === undefined) newMode = \"edit\";\n                setMode(newMode);\n              }}\n            >\n              Toggle Default Form Mode :\n              {mode === undefined ? \"undefined\" : mode}\n            </Button>\n            <Button\n              onClick={() => {\n                let newVariant;\n                if (variant === \"classic\") newVariant = \"questionnaire\";\n                else if (variant === \"questionnaire\") newVariant = \"standard\";\n                else if (variant === \"standard\") newVariant = \"filled\";\n                else if (variant === \"filled\") newVariant = \"outlined\";\n                else if (variant === \"outlined\") newVariant = \"classic\";\n                setVariant(newVariant);\n              }}\n            >\n              Toggle Default Variant : {variant}\n            </Button>\n          </AForm>\n        </ASection>\n      </Box>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}