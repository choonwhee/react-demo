{"ast":null,"code":"var _jsxFileName = \"/Users/choonwheepeh/demo/src/components/aForm.js\";\nimport React from \"react\";\nimport { formDataToObject } from \"./utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const formData = new FormData(event.target);\n  console.log(\"handleSubmit: \" + JSON.stringify(formDataToObject(formData)));\n}\n\nconst AForm = props => {\n  let defaultModeMapping = {\n    readOnly: \"readOnly\",\n    edit: \"edit\",\n    hidden: \"hidden\",\n    disabled: \"disabled\",\n    create: \"edit\",\n    read: \"readOnly\",\n    view: \"readOnly\",\n    update: \"edit\"\n  };\n\n  const fetchDefaultModeMapping = () => {\n    /*this is a mock method to be replaced with an actual service call*/\n    return {\n      review: \"readOnly\"\n    };\n  };\n\n  let defaultModeMappingFromService;\n  if (props.defaultModeMappingService !== undefined) defaultModeMappingFromService = fetchDefaultModeMapping();\n  if (props.defaultModeMapping !== undefined) defaultModeMapping = { ...defaultModeMapping,\n    ...props.defaultModeMapping\n  };\n  console.log(\"AForm - Default Mode Mapping: \" + JSON.stringify(defaultModeMapping));\n  const childrenWithAdditionalProps = React.Children.map(props.children, child => {\n    let additionalProps = {\n      default_mode_mapping: defaultModeMapping\n    };\n    if (props.defaultMode) additionalProps.default_mode = props.defaultMode;\n    if (props.defaultVariant) additionalProps.default_variant = props.defaultVariant;\n    return /*#__PURE__*/React.cloneElement(child, additionalProps);\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      width: \"100%\"\n    },\n    children: childrenWithAdditionalProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AForm;\nexport default AForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AForm\");","map":{"version":3,"sources":["/Users/choonwheepeh/demo/src/components/aForm.js"],"names":["React","formDataToObject","handleSubmit","event","preventDefault","formData","FormData","target","console","log","JSON","stringify","AForm","props","defaultModeMapping","readOnly","edit","hidden","disabled","create","read","view","update","fetchDefaultModeMapping","review","defaultModeMappingFromService","defaultModeMappingService","undefined","childrenWithAdditionalProps","Children","map","children","child","additionalProps","default_mode_mapping","defaultMode","default_mode","defaultVariant","default_variant","cloneElement","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,QAAiC,SAAjC;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,EAAAA,KAAK,CAACC,cAAN;AACA,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,CAAaH,KAAK,CAACI,MAAnB,CAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBC,IAAI,CAACC,SAAL,CAAeV,gBAAgB,CAACI,QAAD,CAA/B,CAA/B;AACD;;AAED,MAAMO,KAAK,GAAIC,KAAD,IAAW;AACvB,MAAIC,kBAAkB,GAAG;AACvBC,IAAAA,QAAQ,EAAE,UADa;AAEvBC,IAAAA,IAAI,EAAE,MAFiB;AAGvBC,IAAAA,MAAM,EAAE,QAHe;AAIvBC,IAAAA,QAAQ,EAAE,UAJa;AAKvBC,IAAAA,MAAM,EAAE,MALe;AAMvBC,IAAAA,IAAI,EAAE,UANiB;AAOvBC,IAAAA,IAAI,EAAE,UAPiB;AAQvBC,IAAAA,MAAM,EAAE;AARe,GAAzB;;AAWA,QAAMC,uBAAuB,GAAG,MAAM;AAClC;AACA,WAAO;AAACC,MAAAA,MAAM,EAAG;AAAV,KAAP;AACH,GAHD;;AAKA,MAAIC,6BAAJ;AACA,MAAIZ,KAAK,CAACa,yBAAN,KAAoCC,SAAxC,EACAF,6BAA6B,GAAGF,uBAAuB,EAAvD;AAEA,MAAIV,KAAK,CAACC,kBAAN,KAA6Ba,SAAjC,EACEb,kBAAkB,GAAG,EAAE,GAAGA,kBAAL;AAAyB,OAAGD,KAAK,CAACC;AAAlC,GAArB;AAEFN,EAAAA,OAAO,CAACC,GAAR,CACE,mCAAmCC,IAAI,CAACC,SAAL,CAAeG,kBAAf,CADrC;AAIA,QAAMc,2BAA2B,GAAG5B,KAAK,CAAC6B,QAAN,CAAeC,GAAf,CAClCjB,KAAK,CAACkB,QAD4B,EAEjCC,KAAD,IAAW;AACT,QAAIC,eAAe,GAAG;AAAEC,MAAAA,oBAAoB,EAAEpB;AAAxB,KAAtB;AACA,QAAID,KAAK,CAACsB,WAAV,EAAuBF,eAAe,CAACG,YAAhB,GAA+BvB,KAAK,CAACsB,WAArC;AACvB,QAAItB,KAAK,CAACwB,cAAV,EACEJ,eAAe,CAACK,eAAhB,GAAkCzB,KAAK,CAACwB,cAAxC;AAEF,wBAAOrC,KAAK,CAACuC,YAAN,CAAmBP,KAAnB,EAA0BC,eAA1B,CAAP;AACD,GATiC,CAApC;AAYA,sBACE;AAAM,IAAA,QAAQ,EAAE/B,YAAhB;AAA8B,IAAA,KAAK,EAAE;AAAEsC,MAAAA,KAAK,EAAE;AAAT,KAArC;AAAA,cACGZ;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA7CD;;KAAMhB,K;AA+CN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\n\nimport { formDataToObject } from \"./utils\";\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const formData = new FormData(event.target);\n  console.log(\"handleSubmit: \" + JSON.stringify(formDataToObject(formData)));\n}\n\nconst AForm = (props) => {\n  let defaultModeMapping = {\n    readOnly: \"readOnly\",\n    edit: \"edit\",\n    hidden: \"hidden\",\n    disabled: \"disabled\",\n    create: \"edit\",\n    read: \"readOnly\",\n    view: \"readOnly\",\n    update: \"edit\",\n  };\n\n  const fetchDefaultModeMapping = () => {\n      /*this is a mock method to be replaced with an actual service call*/\n      return {review : \"readOnly\"}\n  }\n\n  let defaultModeMappingFromService;\n  if (props.defaultModeMappingService !== undefined)\n  defaultModeMappingFromService = fetchDefaultModeMapping();\n\n  if (props.defaultModeMapping !== undefined)\n    defaultModeMapping = { ...defaultModeMapping, ...props.defaultModeMapping };\n\n  console.log(\n    \"AForm - Default Mode Mapping: \" + JSON.stringify(defaultModeMapping)\n  );\n\n  const childrenWithAdditionalProps = React.Children.map(\n    props.children,\n    (child) => {\n      let additionalProps = { default_mode_mapping: defaultModeMapping };\n      if (props.defaultMode) additionalProps.default_mode = props.defaultMode;\n      if (props.defaultVariant)\n        additionalProps.default_variant = props.defaultVariant;\n\n      return React.cloneElement(child, additionalProps);\n    }\n  );\n\n  return (\n    <form onSubmit={handleSubmit} style={{ width: \"100%\" }}>\n      {childrenWithAdditionalProps}\n    </form>\n  );\n};\n\nexport default AForm;\n"]},"metadata":{},"sourceType":"module"}