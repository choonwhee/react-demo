{"ast":null,"code":"var _jsxFileName = \"/Users/choonwheepeh/demo/src/components/aSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AFastTable from \"./aFastTable\";\nimport ASearchPaginationBar from \"./aSearchPaginationBar\";\nimport { cloneChildrenWithDefaultModeProps } from \"./utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ASearch = props => {\n  _s();\n\n  const {\n    columnDefs,\n    service,\n    fetchDataHandler,\n    maxPages\n  } = props;\n\n  const fetchData = pageNum => {\n    //mock method...to be implemented...\n    if (service !== undefined) {\n      fetch(\"/customers\").then(response => response.json()).then(rowData => {\n        console.log(JSON.stringify);\n        setRowData(rowData);\n      });\n    } else if (fetchDataHandler !== undefined) {\n      //use handler from parent to fetchRowData\n      fetchDataHandler();\n    }\n  };\n\n  const data = {\n    pageNum: 1,\n    totalPages: 1,\n    rowData: []\n  };\n  const [rowData, setRowData] = useState(data.rowData);\n  const [pageNum, setPageNum] = useState(data.pageNum);\n\n  const handleGoToPage = (event, pageNum) => {\n    const data = fetchData();\n    setRowData(data.rowData);\n    setPageNum(pageNum);\n  };\n\n  const childrenWithAdditionalProps = cloneChildrenWithDefaultModeProps(props);\n  useEffect(() => {\n    fetchData(1);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        margin: \"20px\"\n      },\n      children: [childrenWithAdditionalProps, /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          height: \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AFastTable, {\n        columnDefs: columnDefs,\n        rowData: rowData,\n        rowSelection: \"multiple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ASearchPaginationBar, {\n      totalPages: data.totalPages,\n      pageNum: pageNum,\n      maxPages: maxPages === undefined ? 9 : maxPages,\n      onGoToPage: handleGoToPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ASearch, \"aIjaNXWz4IBta9t4klX3dPyzUM4=\");\n\n_c = ASearch;\nexport default ASearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"ASearch\");","map":{"version":3,"sources":["/Users/choonwheepeh/demo/src/components/aSearch.js"],"names":["React","useState","useEffect","Box","Typography","AFastTable","ASearchPaginationBar","cloneChildrenWithDefaultModeProps","ASearch","props","columnDefs","service","fetchDataHandler","maxPages","fetchData","pageNum","undefined","fetch","then","response","json","rowData","console","log","JSON","stringify","setRowData","data","totalPages","setPageNum","handleGoToPage","event","childrenWithAdditionalProps","margin","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,iCAAT,QAAkD,SAAlD;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA,gBAAvB;AAAyCC,IAAAA;AAAzC,MAAsDJ,KAA5D;;AAEA,QAAMK,SAAS,GAAIC,OAAD,IAAa;AAC7B;AAEA,QAAIJ,OAAO,KAAKK,SAAhB,EAA2B;AACzBC,MAAAA,KAAK,CAAC,YAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,OAAD,IAAa;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAjB;AACAC,QAAAA,UAAU,CAACL,OAAD,CAAV;AAAoB,OAJ1B;AAKD,KAND,MAMO,IAAIT,gBAAgB,KAAKI,SAAzB,EAAoC;AACzC;AACAJ,MAAAA,gBAAgB;AACjB;AACF,GAbD;;AAeA,QAAMe,IAAI,GAAG;AAAEZ,IAAAA,OAAO,EAAE,CAAX;AAAca,IAAAA,UAAU,EAAE,CAA1B;AAA6BP,IAAAA,OAAO,EAAE;AAAtC,GAAb;AACA,QAAM,CAACA,OAAD,EAAUK,UAAV,IAAwBzB,QAAQ,CAAC0B,IAAI,CAACN,OAAN,CAAtC;AACA,QAAM,CAACN,OAAD,EAAUc,UAAV,IAAwB5B,QAAQ,CAAC0B,IAAI,CAACZ,OAAN,CAAtC;;AAEA,QAAMe,cAAc,GAAG,CAACC,KAAD,EAAQhB,OAAR,KAAoB;AACzC,UAAMY,IAAI,GAAGb,SAAS,EAAtB;AACAY,IAAAA,UAAU,CAACC,IAAI,CAACN,OAAN,CAAV;AACAQ,IAAAA,UAAU,CAACd,OAAD,CAAV;AACD,GAJD;;AAMA,QAAMiB,2BAA2B,GAAGzB,iCAAiC,CAACE,KAAD,CAArE;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,SAAS,CAAC,CAAD,CAAT;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEmB,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA,iBACGD,2BADH,eAEE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEE,UAAAA,MAAM,EAAE;AAAV;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,UAAD;AACE,QAAA,UAAU,EAAExB,UADd;AAEE,QAAA,OAAO,EAAEW,OAFX;AAGE,QAAA,YAAY,EAAC;AAHf;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,oBAAD;AACE,MAAA,UAAU,EAAEM,IAAI,CAACC,UADnB;AAEE,MAAA,OAAO,EAAEb,OAFX;AAGE,MAAA,QAAQ,EAAEF,QAAQ,KAAKG,SAAb,GAAyB,CAAzB,GAA6BH,QAHzC;AAIE,MAAA,UAAU,EAAEiB;AAJd;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CArDD;;GAAMtB,O;;KAAAA,O;AAuDN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AFastTable from \"./aFastTable\";\nimport ASearchPaginationBar from \"./aSearchPaginationBar\";\nimport { cloneChildrenWithDefaultModeProps } from \"./utils\";\n\nconst ASearch = (props) => {\n  const { columnDefs, service, fetchDataHandler, maxPages } = props;\n\n  const fetchData = (pageNum) => {\n    //mock method...to be implemented...\n\n    if (service !== undefined) {\n      fetch(\"/customers\")\n        .then((response) => response.json())\n        .then((rowData) => {\n            console.log(JSON.stringify)\n            setRowData(rowData)});\n    } else if (fetchDataHandler !== undefined) {\n      //use handler from parent to fetchRowData\n      fetchDataHandler();\n    }\n  };\n\n  const data = { pageNum: 1, totalPages: 1, rowData: [] };\n  const [rowData, setRowData] = useState(data.rowData);\n  const [pageNum, setPageNum] = useState(data.pageNum);\n\n  const handleGoToPage = (event, pageNum) => {\n    const data = fetchData();\n    setRowData(data.rowData);\n    setPageNum(pageNum);\n  };\n\n  const childrenWithAdditionalProps = cloneChildrenWithDefaultModeProps(props);\n\n  useEffect(() => {\n    fetchData(1);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Box style={{ margin: \"20px\" }}>\n        {childrenWithAdditionalProps}\n        <Box style={{ height: \"20px\" }} />\n        <AFastTable\n          columnDefs={columnDefs}\n          rowData={rowData}\n          rowSelection=\"multiple\"\n        />\n      </Box>\n      <ASearchPaginationBar\n        totalPages={data.totalPages}\n        pageNum={pageNum}\n        maxPages={maxPages === undefined ? 9 : maxPages}\n        onGoToPage={handleGoToPage}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default ASearch;\n"]},"metadata":{},"sourceType":"module"}