{"ast":null,"code":"var _jsxFileName = \"/Users/choonwheepeh/demo/src/components/testContentPanel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport AForm from \"./aForm\";\nimport ASection from \"./aSection\";\nimport ATextField from \"./aTextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TestContentPanel = props => {\n  _s();\n\n  const [mode, setMode] = useState(\"happydays\");\n  const [variant, setVariant] = useState(\"classic\");\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: \"800px\",\n    children: /*#__PURE__*/_jsxDEV(ASection, {\n      title: \"Test Form\",\n      collapsable: false,\n      children: /*#__PURE__*/_jsxDEV(AForm, {\n        defaultMode: mode,\n        defaultModeMapping: {\n          happydays: \"edit\",\n          saddays: \"disabled\",\n          rainydays: \"hidden\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(ATextField, {\n          name: \"id\",\n          label: \"ID\",\n          defaultValue: \"123\",\n          modeMapping: {\n            happydays: \"disabled\",\n            sad\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ATextField, {\n          name: \"hiddenField\",\n          defaultValue: \"secret\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ATextField, {\n          name: \"firstName\",\n          defaultValue: \"abc\",\n          required: true,\n          info: \"This is some information for you!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ATextField, {\n          name: \"lastName\",\n          defaultValue: \"def\",\n          required: true,\n          error: true,\n          helperText: \"Text to help you with!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ATextField, {\n          name: \"address1\",\n          label: \"Address\",\n          autocompleteOptions: [{\n            label: \"Label 1\",\n            value: \"Value 1\"\n          }, {\n            label: \"Label 2\",\n            value: \"Value 2\"\n          }],\n          autocompleteGetOptionLabel: option => option.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ATextField, {\n          label: \"Star Wars API\",\n          autocompleteService: \"test\",\n          autocompleteGetOptionLabel: option => option.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ATextField, {\n          label: \"Comments\",\n          multiline: true,\n          rows: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ATextField, {\n          label: \"Approval Comments\",\n          multiline: true,\n          rows: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ATextField, {\n          name: \"question1\",\n          label: \"Q1. Whats is your name? Please enter your full name and not your nickname. Please share your life story and all your achievements in life.\",\n          multiline: true,\n          rows: \"4\",\n          variant: \"questionnaire\",\n          info: \"test test test test info!!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            let newMode;\n            if (mode === \"happydays\") newMode = \"saddays\";else if (mode === \"saddays\") newMode = \"rainydays\";else if (mode === \"readOnly\") newMode = \"hidden\";else if (mode === \"hidden\") newMode = \"create\";else if (mode === \"create\") newMode = \"read\";else if (mode === \"read\") newMode = \"view\";else if (mode === \"view\") newMode = \"update\";else if (mode === \"update\") newMode = \"approval\";else if (mode === \"approval\") newMode = \"admin\";else if (mode === \"admin\") newMode = \"review\";else if (mode === \"review\") newMode = \"reopen\";else if (mode === \"reopen\") newMode = undefined;else if (mode === undefined) newMode = \"edit\";\n            setMode(newMode);\n          },\n          children: [\"Toggle Default Form Mode :\", mode === undefined ? \"undefined\" : mode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            let newVariant;\n            if (variant === \"classic\") newVariant = \"questionnaire\";else if (variant === \"questionnaire\") newVariant = \"standard\";else if (variant === \"standard\") newVariant = \"filled\";else if (variant === \"filled\") newVariant = \"outlined\";else if (variant === \"outlined\") newVariant = \"classic\";\n            setVariant(newVariant);\n          },\n          children: [\"Toggle Default Variant : \", variant]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TestContentPanel, \"7DngzGrorMUIZNzr0axvnjL7uiw=\");\n\n_c = TestContentPanel;\nexport default TestContentPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestContentPanel\");","map":{"version":3,"sources":["/Users/choonwheepeh/demo/src/components/testContentPanel.js"],"names":["React","useState","Box","AForm","ASection","ATextField","Button","TextField","TestContentPanel","props","mode","setMode","variant","setVariant","happydays","saddays","rainydays","sad","label","value","option","name","newMode","undefined","newVariant"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport Box from \"@material-ui/core/Box\";\nimport AForm from \"./aForm\";\nimport ASection from \"./aSection\";\nimport ATextField from \"./aTextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField } from \"@material-ui/core\";\n\nconst TestContentPanel = (props) => {\n  const [mode, setMode] = useState(\"happydays\");\n  const [variant, setVariant] = useState(\"classic\");\n  return (\n    <Box width=\"800px\">\n      <ASection title=\"Test Form\" collapsable={false}>\n        <AForm\n          defaultMode={mode}\n          defaultModeMapping={{\n            happydays: \"edit\",\n            saddays: \"disabled\",\n            rainydays: \"hidden\",\n          }}\n        >\n          <ATextField\n            name=\"id\"\n            label=\"ID\"\n            defaultValue=\"123\"\n            modeMapping={{ happydays: \"disabled\", sad }}\n          />\n          <ATextField name=\"hiddenField\" defaultValue=\"secret\" />\n          <ATextField\n            name=\"firstName\"\n            defaultValue=\"abc\"\n            required\n            info=\"This is some information for you!\"\n          />\n          <ATextField\n            name=\"lastName\"\n            defaultValue=\"def\"\n            required\n            error\n            helperText=\"Text to help you with!\"\n          />\n          <ATextField\n            name=\"address1\"\n            label=\"Address\"\n            autocompleteOptions={[\n              { label: \"Label 1\", value: \"Value 1\" },\n              { label: \"Label 2\", value: \"Value 2\" },\n            ]}\n            autocompleteGetOptionLabel={(option) => option.value}\n          />\n          <ATextField\n            label=\"Star Wars API\"\n            autocompleteService=\"test\"\n            autocompleteGetOptionLabel={(option) => option.name}\n          />\n          <ATextField label=\"Comments\" multiline rows=\"4\" />\n          <ATextField label=\"Approval Comments\" multiline rows=\"4\" />\n          <ATextField\n            name=\"question1\"\n            label=\"Q1. Whats is your name? Please enter your full name and not your nickname. Please share your life story and all your achievements in life.\"\n            multiline\n            rows=\"4\"\n            variant=\"questionnaire\"\n            info=\"test test test test info!!!!\"\n          />\n\n          <Button type=\"submit\">Submit</Button>\n          <Button\n            onClick={() => {\n              let newMode;\n              if (mode === \"happydays\") newMode = \"saddays\";\n              else if (mode === \"saddays\") newMode = \"rainydays\";\n              else if (mode === \"readOnly\") newMode = \"hidden\";\n              else if (mode === \"hidden\") newMode = \"create\";\n              else if (mode === \"create\") newMode = \"read\";\n              else if (mode === \"read\") newMode = \"view\";\n              else if (mode === \"view\") newMode = \"update\";\n              else if (mode === \"update\") newMode = \"approval\";\n              else if (mode === \"approval\") newMode = \"admin\";\n              else if (mode === \"admin\") newMode = \"review\";\n              else if (mode === \"review\") newMode = \"reopen\";\n              else if (mode === \"reopen\") newMode = undefined;\n              else if (mode === undefined) newMode = \"edit\";\n              setMode(newMode);\n            }}\n          >\n            Toggle Default Form Mode :{mode === undefined ? \"undefined\" : mode}\n          </Button>\n          <Button\n            onClick={() => {\n              let newVariant;\n              if (variant === \"classic\") newVariant = \"questionnaire\";\n              else if (variant === \"questionnaire\") newVariant = \"standard\";\n              else if (variant === \"standard\") newVariant = \"filled\";\n              else if (variant === \"filled\") newVariant = \"outlined\";\n              else if (variant === \"outlined\") newVariant = \"classic\";\n              setVariant(newVariant);\n            }}\n          >\n            Toggle Default Variant : {variant}\n          </Button>\n        </AForm>\n      </ASection>\n    </Box>\n  );\n};\nexport default TestContentPanel;\n"]},"metadata":{},"sourceType":"module"}