{"ast":null,"code":"var _jsxFileName = \"/Users/choonwheepeh/demo/src/components/aStepperForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AForm from \"./aForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nconst AStepperForm = props => {\n  _s();\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const [steps, setSteps] = React.useState([]);\n  let stepTitles = {};\n  useEffect(() => {\n    console.log(Object.values(stepTitles));\n    setSteps(Object.values(stepTitles));\n  }, []);\n\n  const addStep = (name, stepTitle, optional) => {\n    console.log(\"ptb: \" + JSON.stringify(stepTitles));\n    stepTitles[name] = {\n      title: stepTitle,\n      optional: true\n    };\n    console.log(\"pt: \" + JSON.stringify(stepTitles));\n    return Object.keys(stepTitles).length - 1;\n  };\n\n  const childrenWithAdditionalProps = React.Children.map(props.children, child => {\n    let additionalProps = {\n      add_step: addStep,\n      active_step: activeStep\n    };\n    return /*#__PURE__*/React.cloneElement(child, additionalProps);\n  });\n\n  const isStepOptional = stepNum => {\n    var _steps$stepNum;\n\n    return (_steps$stepNum = steps[stepNum]) === null || _steps$stepNum === void 0 ? void 0 : _steps$stepNum.optional;\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleSubmit = () => {};\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [steps.length > 0 ? /*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      children: steps.map((step, index) => {\n        const stepProps = {};\n        const labelProps = {};\n\n        if (isStepOptional(index)) {\n          labelProps.optional = /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: \"Optional\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this);\n        }\n\n        if (isStepSkipped(index)) {\n          stepProps.completed = false;\n        }\n\n        return /*#__PURE__*/_jsxDEV(Step, { ...stepProps,\n          children: /*#__PURE__*/_jsxDEV(StepLabel, { ...labelProps,\n            children: step.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)\n        }, step.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(AForm, {\n          onSubmit: handleSubmit,\n          children: [childrenWithAdditionalProps, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [activeStep === steps.length && steps.length !== 0 ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.instructions,\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleReset,\n                className: classes.button,\n                children: \"Reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this) : \"\", /*#__PURE__*/_jsxDEV(Button, {\n              disabled: activeStep === 0,\n              onClick: handleBack,\n              className: classes.button,\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), isStepOptional(activeStep) && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleSkip,\n              className: classes.button,\n              children: \"Skip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), activeStep === steps.length - 1 ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.button,\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleNext,\n              className: classes.button,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AStepperForm, \"X3xmE8b0rVVnEcTZTa1hz1HaN5E=\", false, function () {\n  return [useStyles];\n});\n\n_c = AStepperForm;\nexport default AStepperForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AStepperForm\");","map":{"version":3,"sources":["/Users/choonwheepeh/demo/src/components/aStepperForm.js"],"names":["React","useEffect","makeStyles","Stepper","Step","StepLabel","Button","Typography","AForm","useStyles","theme","root","width","button","marginRight","spacing","instructions","marginTop","marginBottom","AStepperForm","props","classes","activeStep","setActiveStep","useState","skipped","setSkipped","Set","steps","setSteps","stepTitles","console","log","Object","values","addStep","name","stepTitle","optional","JSON","stringify","title","keys","length","childrenWithAdditionalProps","Children","map","children","child","additionalProps","add_step","active_step","cloneElement","isStepOptional","stepNum","isStepSkipped","step","has","handleSubmit","handleNext","newSkipped","delete","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","handleReset","index","stepProps","labelProps","completed"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AForm from \"./aForm\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst AStepperForm = (props) => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const [steps, setSteps] = React.useState([]);\n\n  let stepTitles = {};\n  useEffect(() => {\n    console.log(Object.values(stepTitles));\n    setSteps(Object.values(stepTitles));\n  }, []);\n\n  const addStep = (name, stepTitle, optional) => {\n    console.log(\"ptb: \" + JSON.stringify(stepTitles));\n    stepTitles[name] = { title: stepTitle, optional: true };\n    console.log(\"pt: \" + JSON.stringify(stepTitles));\n    return Object.keys(stepTitles).length - 1;\n  };\n\n  const childrenWithAdditionalProps = React.Children.map(\n    props.children,\n    (child) => {\n      let additionalProps = {\n        add_step: addStep,\n        active_step: activeStep,\n      };\n\n      return React.cloneElement(child, additionalProps);\n    }\n  );\n\n  const isStepOptional = (stepNum) => {\n    return steps[stepNum]?.optional;\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleSubmit = () => {\n    \n  }\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      {steps.length > 0 ? (\n        <Stepper activeStep={activeStep}>\n          {steps.map((step, index) => {\n            const stepProps = {};\n            const labelProps = {};\n            if (isStepOptional(index)) {\n              labelProps.optional = (\n                <Typography variant=\"caption\">Optional</Typography>\n              );\n            }\n            if (isStepSkipped(index)) {\n              stepProps.completed = false;\n            }\n            return (\n              <Step key={step.title} {...stepProps}>\n                <StepLabel {...labelProps}>{step.title}</StepLabel>\n              </Step>\n            );\n          })}\n        </Stepper>\n      ) : (\n        \"\"\n      )}\n      <div>\n        <div>\n          <AForm onSubmit={handleSubmit}>\n            {childrenWithAdditionalProps}\n            <div>\n              {activeStep === steps.length && steps.length !== 0 ? (\n                <React.Fragment>\n                  <Typography className={classes.instructions}>\n                    Completed\n                  </Typography>\n                  <Button onClick={handleReset} className={classes.button}>\n                    Reset\n                  </Button>\n                </React.Fragment>\n              ) : (\n                \"\"\n              )}\n              <Button\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                className={classes.button}\n              >\n                Back\n              </Button>\n              {isStepOptional(activeStep) && (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSkip}\n                  className={classes.button}\n                >\n                  Skip\n                </Button>\n              )}\n\n              {activeStep === steps.length - 1 ? (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.button}\n                  type=\"submit\"\n                >\n                  Submit\n                </Button>\n              ) : (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleNext}\n                  className={classes.button}\n                >\n                  Next\n                </Button>\n              )}\n            </div>\n          </AForm>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AStepperForm;\n"]},"metadata":{},"sourceType":"module"}