{"ast":null,"code":"var _jsxFileName = \"/Users/choonwheepeh/demo/src/components/aSearchPaginationBar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paginationBar: {\n    margin: \"10px 0 10px 0\"\n  },\n  pageButtons: {\n    backgroundColor: theme.palette.secondary.contrastText,\n    minWidth: \"30px\",\n    maxWidth: \"30px\",\n    minHeight: \"30px\",\n    maxHeight: \"30px\",\n    margin: \"0px 5px 0px 5px\"\n  },\n  currentPageButton: {\n    minWidth: \"30px\",\n    maxWidth: \"30px\",\n    minHeight: \"30px\",\n    maxHeight: \"30px\",\n    margin: \"0px 5px 0px 5px\"\n  }\n}));\n\nconst ASearchPaginationBar = props => {\n  _s();\n\n  const {\n    totalPages,\n    pageNum,\n    onGoToPage,\n    maxPages\n  } = props;\n  const classes = useStyles();\n  let numPagesToShow = 9; //default to 9 if prop not provided\n\n  if (maxPages !== undefined) numPagesToShow = maxPages;\n  let startPageNum = pageNum - Math.floor(numPagesToShow / 2);\n  let endPageNum = pageNum + Math.floor(numPagesToShow / 2);\n\n  if (startPageNum < 1) {\n    startPageNum = 1;\n    endPageNum = numPagesToShow;\n    if (endPageNum > totalPages) endPageNum = totalPages;\n  } else if (endPageNum > totalPages) {\n    endPageNum = totalPages;\n    startPageNum = totalPages - numPagesToShow + 1;\n    if (startPageNum < 1) startPageNum = 1;\n  }\n\n  console.log(\"startPageNum: \" + startPageNum + \" | totalPages: \" + totalPages + \" | pageNum: \" + pageNum + \" | numPagesToShow: \" + numPagesToShow + \" | endPageNum: \" + endPageNum);\n\n  const handleGoToPage = event => {\n    onGoToPage(event);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.paginationBar,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      disabled: pageNum <= 1 ? true : false,\n      className: classes.pageButtons,\n      variant: \"outlined\",\n      color: \"primary\",\n      value: 1,\n      onClick: handleGoToPage,\n      children: /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: pageNum <= 1 ? true : false,\n      className: classes.pageButtons,\n      variant: \"outlined\",\n      color: \"primary\",\n      value: pageNum - 1,\n      onClick: handleGoToPage,\n      children: /*#__PURE__*/_jsxDEV(NavigateBeforeIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), function () {\n      let buttons = [];\n\n      for (let i = startPageNum; i <= endPageNum; i++) {\n        let buttonProps = {};\n\n        if (pageNum === i) {\n          buttonProps.className = classes.currentPageButton;\n          buttonProps.variant = \"contained\";\n        } else {\n          buttonProps.className = classes.pageButtons;\n          buttonProps.variant = \"outlined\";\n        }\n\n        buttons.push( /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          ...buttonProps,\n          value: i,\n          onClick: handleGoToPage,\n          children: i\n        }, \"_page_button_\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this));\n      }\n\n      return buttons;\n    }(), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: pageNum >= totalPages ? true : false,\n      className: classes.pageButtons,\n      variant: \"outlined\",\n      color: \"primary\",\n      value: pageNum + 1,\n      onClick: handleGoToPage,\n      children: /*#__PURE__*/_jsxDEV(NavigateNextIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: pageNum >= totalPages ? true : false,\n      className: classes.pageButtons,\n      variant: \"outlined\",\n      color: \"primary\",\n      value: totalPages,\n      onClick: handleGoToPage,\n      children: /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ASearchPaginationBar, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ASearchPaginationBar;\nexport default ASearchPaginationBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ASearchPaginationBar\");","map":{"version":3,"sources":["/Users/choonwheepeh/demo/src/components/aSearchPaginationBar.js"],"names":["React","makeStyles","Box","Button","NavigateBeforeIcon","NavigateNextIcon","FirstPageIcon","LastPageIcon","useStyles","theme","paginationBar","margin","pageButtons","backgroundColor","palette","secondary","contrastText","minWidth","maxWidth","minHeight","maxHeight","currentPageButton","ASearchPaginationBar","props","totalPages","pageNum","onGoToPage","maxPages","classes","numPagesToShow","undefined","startPageNum","Math","floor","endPageNum","console","log","handleGoToPage","event","buttons","i","buttonProps","className","variant","push"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\n\nconst useStyles = makeStyles((theme) => ({\n  paginationBar: {\n    margin: \"10px 0 10px 0\",\n  },\n  pageButtons: {\n    backgroundColor: theme.palette.secondary.contrastText,\n    minWidth: \"30px\",\n    maxWidth: \"30px\",\n    minHeight: \"30px\",\n    maxHeight: \"30px\",\n    margin: \"0px 5px 0px 5px\",\n  },\n  currentPageButton: {\n    minWidth: \"30px\",\n    maxWidth: \"30px\",\n    minHeight: \"30px\",\n    maxHeight: \"30px\",\n    margin: \"0px 5px 0px 5px\",\n  },\n}));\n\nconst ASearchPaginationBar = (props) => {\n  const { totalPages, pageNum, onGoToPage, maxPages } = props;\n\n  const classes = useStyles();\n\n  let numPagesToShow = 9; //default to 9 if prop not provided\n  if (maxPages !== undefined) numPagesToShow = maxPages;\n\n  let startPageNum = pageNum - Math.floor(numPagesToShow / 2);\n  let endPageNum = pageNum + Math.floor(numPagesToShow / 2);\n\n  if (startPageNum < 1) {\n    startPageNum = 1;\n    endPageNum = numPagesToShow;\n    if (endPageNum > totalPages) endPageNum = totalPages;\n  } else if (endPageNum > totalPages) {\n    endPageNum = totalPages;\n    startPageNum = totalPages - numPagesToShow + 1;\n    if (startPageNum < 1) startPageNum = 1;\n  }\n\n  console.log(\n    \"startPageNum: \" +\n      startPageNum +\n      \" | totalPages: \" +\n      totalPages +\n      \" | pageNum: \" +\n      pageNum +\n      \" | numPagesToShow: \" +\n      numPagesToShow +\n      \" | endPageNum: \" +\n      endPageNum\n  );\n\n  const handleGoToPage = (event) => {\n      onGoToPage(event);\n  };\n\n  return (\n    <Box className={classes.paginationBar}>\n      <Button\n        disabled={pageNum <= 1 ? true : false}\n        className={classes.pageButtons}\n        variant=\"outlined\"\n        color=\"primary\"\n        value={1}\n        onClick={handleGoToPage}\n      >\n        <FirstPageIcon />\n      </Button>\n      <Button\n        disabled={pageNum <= 1 ? true : false}\n        className={classes.pageButtons}\n        variant=\"outlined\"\n        color=\"primary\"\n        value={pageNum - 1}\n        onClick={handleGoToPage}\n      >\n        <NavigateBeforeIcon />\n      </Button>\n      {(function () {\n        let buttons = [];\n        for (let i = startPageNum; i <= endPageNum; i++) {\n          let buttonProps = {};\n          if (pageNum === i) {\n            buttonProps.className = classes.currentPageButton;\n            buttonProps.variant = \"contained\";\n          } else {\n            buttonProps.className = classes.pageButtons;\n            buttonProps.variant = \"outlined\";\n          }\n          buttons.push(\n            <Button\n              key={\"_page_button_\" + i}\n              variant=\"outlined\"\n              color=\"primary\"\n              {...buttonProps}\n              value={i}\n              onClick={handleGoToPage}\n            >\n              {i}\n            </Button>\n          );\n        }\n        return buttons;\n      })()}\n      <Button\n        disabled={pageNum >= totalPages ? true : false}\n        className={classes.pageButtons}\n        variant=\"outlined\"\n        color=\"primary\"\n        value={pageNum + 1}\n        onClick={handleGoToPage}\n      >\n        <NavigateNextIcon />\n      </Button>\n      <Button\n        disabled={pageNum >= totalPages ? true : false}\n        className={classes.pageButtons}\n        variant=\"outlined\"\n        color=\"primary\"\n        value={totalPages}\n        onClick={handleGoToPage}\n      >\n        <LastPageIcon />\n      </Button>\n    </Box>\n  );\n};\nexport default ASearchPaginationBar;\n"]},"metadata":{},"sourceType":"module"}