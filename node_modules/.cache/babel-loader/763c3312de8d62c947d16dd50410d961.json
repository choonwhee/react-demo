{"ast":null,"code":"var _jsxFileName = \"/Users/choonwheepeh/demo/src/components/utils.js\";\nimport React from \"react\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function toLabelCase(str) {\n  var _str$charAt;\n\n  return (str === null || str === void 0 ? void 0 : (_str$charAt = str.charAt(0)) === null || _str$charAt === void 0 ? void 0 : _str$charAt.toUpperCase()) + (str === null || str === void 0 ? void 0 : str.replace(/([A-Z])/g, \" $1\").slice(1));\n}\nexport function toCamelCase(str) {\n  var _str$charAt2;\n\n  return (str === null || str === void 0 ? void 0 : (_str$charAt2 = str.charAt(0)) === null || _str$charAt2 === void 0 ? void 0 : _str$charAt2.toLowerCase()) + (str === null || str === void 0 ? void 0 : str.replace(\" \", \"_\").slice(1));\n}\nexport function generateName(name, label) {\n  return name === undefined ? label === undefined ? \"field\" + Date.now() : toCamelCase(label) : name;\n}\nexport function generateLabel(label, name) {\n  return label === undefined ? NamedNodeMap === undefined ? \"\" : toLabelCase(name) : label;\n}\nexport function formDataToObject(formData) {\n  let jsonObject = {};\n\n  for (const [key, value] of formData) {\n    jsonObject[key] = value;\n  }\n\n  return jsonObject;\n}\nexport function cloneChildrenWithAdditionalProps(props, propsToAdd) {\n  return React.Children.toArray(props.children).filter(n => n) //remove nulls\n  .map(child => {\n    return /*#__PURE__*/React.cloneElement(child, propsToAdd);\n  });\n}\nexport function ilterOptions(field, filterValues) {\n  return filterValues.map(filterValue => {\n    /*#__PURE__*/\n    _jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          defaultChecked: true,\n          name: \"_filter_options_\" + field,\n          value: filterValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this),\n        label: filterValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this);\n  });\n}","map":{"version":3,"sources":["/Users/choonwheepeh/demo/src/components/utils.js"],"names":["React","FormGroup","Checkbox","FormControlLabel","toLabelCase","str","charAt","toUpperCase","replace","slice","toCamelCase","toLowerCase","generateName","name","label","undefined","Date","now","generateLabel","NamedNodeMap","formDataToObject","formData","jsonObject","key","value","cloneChildrenWithAdditionalProps","props","propsToAdd","Children","toArray","children","filter","n","map","child","cloneElement","ilterOptions","field","filterValues","filterValue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;AAEA,OAAO,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AAAA;;AAC/B,SACE,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,2BAAAA,GAAG,CAAEC,MAAL,CAAY,CAAZ,6DAAgBC,WAAhB,OAAgCF,GAAhC,aAAgCA,GAAhC,uBAAgCA,GAAG,CAAEG,OAAL,CAAa,UAAb,EAAyB,KAAzB,EAAgCC,KAAhC,CAAsC,CAAtC,CAAhC,CADF;AAGD;AAED,OAAO,SAASC,WAAT,CAAqBL,GAArB,EAA0B;AAAA;;AAC/B,SAAO,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,4BAAAA,GAAG,CAAEC,MAAL,CAAY,CAAZ,+DAAgBK,WAAhB,OAAgCN,GAAhC,aAAgCA,GAAhC,uBAAgCA,GAAG,CAAEG,OAAL,CAAa,GAAb,EAAkB,GAAlB,EAAuBC,KAAvB,CAA6B,CAA7B,CAAhC,CAAP;AACD;AAED,OAAO,SAASG,YAAT,CAAsBC,IAAtB,EAA4BC,KAA5B,EAAmC;AACxC,SAAOD,IAAI,KAAKE,SAAT,GACHD,KAAK,KAAKC,SAAV,GACE,UAAUC,IAAI,CAACC,GAAL,EADZ,GAEEP,WAAW,CAACI,KAAD,CAHV,GAIHD,IAJJ;AAKD;AAED,OAAO,SAASK,aAAT,CAAuBJ,KAAvB,EAA8BD,IAA9B,EAAoC;AACzC,SAAOC,KAAK,KAAKC,SAAV,GACHI,YAAY,KAAKJ,SAAjB,GACE,EADF,GAEEX,WAAW,CAACS,IAAD,CAHV,GAIHC,KAJJ;AAKD;AAED,OAAO,SAASM,gBAAT,CAA0BC,QAA1B,EAAoC;AACzC,MAAIC,UAAU,GAAG,EAAjB;;AACA,OAAK,MAAM,CAACC,GAAD,EAAMC,KAAN,CAAX,IAA2BH,QAA3B,EAAqC;AACnCC,IAAAA,UAAU,CAACC,GAAD,CAAV,GAAkBC,KAAlB;AACD;;AACD,SAAOF,UAAP;AACD;AAED,OAAO,SAASG,gCAAT,CAA0CC,KAA1C,EAAiDC,UAAjD,EAA6D;AAClE,SAAO3B,KAAK,CAAC4B,QAAN,CAAeC,OAAf,CAAuBH,KAAK,CAACI,QAA7B,EACJC,MADI,CACIC,CAAD,IAAOA,CADV,EACa;AADb,GAEJC,GAFI,CAECC,KAAD,IAAW;AACd,wBAAOlC,KAAK,CAACmC,YAAN,CAAmBD,KAAnB,EAA0BP,UAA1B,CAAP;AACD,GAJI,CAAP;AAKD;AAED,OAAO,SAASS,YAAT,CAAsBC,KAAtB,EAA6BC,YAA7B,EAA2C;AAChD,SAAOA,YAAY,CAACL,GAAb,CAAkBM,WAAD,IAAiB;AACvC;AAAA,YAAC,SAAD;AAAA,6BACE,QAAC,gBAAD;AACE,QAAA,OAAO,eACL,QAAC,QAAD;AACE,UAAA,cAAc,MADhB;AAEE,UAAA,IAAI,EAAE,qBAAqBF,KAF7B;AAGE,UAAA,KAAK,EAAEE;AAHT;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAQE,QAAA,KAAK,EAAEA;AART;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAYD,GAbM,CAAP;AAcD","sourcesContent":["import React from \"react\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nexport function toLabelCase(str) {\n  return (\n    str?.charAt(0)?.toUpperCase() + str?.replace(/([A-Z])/g, \" $1\").slice(1)\n  );\n}\n\nexport function toCamelCase(str) {\n  return str?.charAt(0)?.toLowerCase() + str?.replace(\" \", \"_\").slice(1);\n}\n\nexport function generateName(name, label) {\n  return name === undefined\n    ? label === undefined\n      ? \"field\" + Date.now()\n      : toCamelCase(label)\n    : name;\n}\n\nexport function generateLabel(label, name) {\n  return label === undefined\n    ? NamedNodeMap === undefined\n      ? \"\"\n      : toLabelCase(name)\n    : label;\n}\n\nexport function formDataToObject(formData) {\n  let jsonObject = {};\n  for (const [key, value] of formData) {\n    jsonObject[key] = value;\n  }\n  return jsonObject;\n}\n\nexport function cloneChildrenWithAdditionalProps(props, propsToAdd) {\n  return React.Children.toArray(props.children)\n    .filter((n) => n) //remove nulls\n    .map((child) => {\n      return React.cloneElement(child, propsToAdd);\n    });\n}\n\nexport function ilterOptions(field, filterValues) {\n  return filterValues.map((filterValue) => {\n    <FormGroup>\n      <FormControlLabel\n        control={\n          <Checkbox\n            defaultChecked\n            name={\"_filter_options_\" + field}\n            value={filterValue}\n          />\n        }\n        label={filterValue}\n      />\n    </FormGroup>;\n  });\n}\n"]},"metadata":{},"sourceType":"module"}