{"ast":null,"code":"var _jsxFileName = \"/Users/choonwheepeh/demo/src/components/aSearchPaginationBar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paginationBar: {\n    margin: \"10px 0 10px 0\"\n  },\n  pageButtons: {\n    backgroundColor: theme.palette.secondary.contrastText,\n    minWidth: \"30px\",\n    maxWidth: \"30px\",\n    minHeight: \"30px\",\n    maxHeight: \"30px\",\n    margin: \"0px 5px 0px 5px\"\n  },\n  currentPageButton: {\n    minWidth: \"30px\",\n    maxWidth: \"30px\",\n    minHeight: \"30px\",\n    maxHeight: \"30px\",\n    margin: \"0px 5px 0px 5px\"\n  }\n}));\n\nconst ASearchPaginationBar = props => {\n  _s();\n\n  const {\n    totalPages,\n    pageNum,\n    onGoToPage,\n    maxPages\n  } = props;\n  const classes = useStyles();\n  const intPageNum = parseInt(pageNum);\n  const intTotalPages = parseInt(totalPages);\n  let intMaxPages = 9; //default to 9 if prop not provided\n\n  if (maxPages !== undefined) intMaxPages = parseInt(maxPages);\n  let startPageNum;\n  let endPageNum;\n\n  if (totalPages <= intMaxPages) {\n    startPageNum = 1;\n    endPageNum = intTotalPages;\n  } else {\n    startPageNum = intPageNum - Math.floor(intMaxPages / 2);\n    endPageNum = intPageNum + Math.floor(intMaxPages / 2);\n\n    if (startPageNum <= 1) {\n      endPageNum = endPageNum + (1 - startPageNum);\n      startPageNum = 1;\n    } else if (endPageNum > intTotalPages) {\n      startPageNum = startPageNum - (endPageNum - intTotalPages);\n      endPageNum = intTotalPages;\n    }\n  }\n\n  const handleGoToPage = event => {\n    event.stopPropagation();\n    onGoToPage(event, event.currentTarget.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.paginationBar,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      disabled: pageNum <= 1 ? true : false,\n      className: classes.pageButtons,\n      variant: \"outlined\",\n      color: \"primary\",\n      value: 0,\n      onClick: handleGoToPage,\n      children: /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: pageNum <= 1 ? true : false,\n      className: classes.pageButtons,\n      variant: \"outlined\",\n      color: \"primary\",\n      value: pageNum - 2,\n      onClick: handleGoToPage,\n      children: /*#__PURE__*/_jsxDEV(NavigateBeforeIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), (() => {\n      let buttons = [];\n\n      for (let i = startPageNum; i <= endPageNum; i++) {\n        let buttonProps = {};\n\n        if (parseInt(pageNum) === i) {\n          buttonProps.className = classes.currentPageButton;\n          buttonProps.variant = \"contained\";\n        } else {\n          buttonProps.className = classes.pageButtons;\n          buttonProps.variant = \"outlined\";\n        }\n\n        buttons.push( /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          ...buttonProps,\n          value: i - 1,\n          onClick: handleGoToPage,\n          children: i\n        }, \"_page_button_\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this));\n      }\n\n      return buttons;\n    })(), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: pageNum >= totalPages ? true : false,\n      className: classes.pageButtons,\n      variant: \"outlined\",\n      color: \"primary\",\n      value: pageNum,\n      onClick: handleGoToPage,\n      children: /*#__PURE__*/_jsxDEV(NavigateNextIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: pageNum >= totalPages ? true : false,\n      className: classes.pageButtons,\n      variant: \"outlined\",\n      color: \"primary\",\n      value: totalPages - 1,\n      onClick: handleGoToPage,\n      children: /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ASearchPaginationBar, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ASearchPaginationBar;\nexport default ASearchPaginationBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ASearchPaginationBar\");","map":{"version":3,"sources":["/Users/choonwheepeh/demo/src/components/aSearchPaginationBar.js"],"names":["React","makeStyles","Box","Button","NavigateBeforeIcon","NavigateNextIcon","FirstPageIcon","LastPageIcon","useStyles","theme","paginationBar","margin","pageButtons","backgroundColor","palette","secondary","contrastText","minWidth","maxWidth","minHeight","maxHeight","currentPageButton","ASearchPaginationBar","props","totalPages","pageNum","onGoToPage","maxPages","classes","intPageNum","parseInt","intTotalPages","intMaxPages","undefined","startPageNum","endPageNum","Math","floor","handleGoToPage","event","stopPropagation","currentTarget","value","buttons","i","buttonProps","className","variant","push"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\n\nconst useStyles = makeStyles((theme) => ({\n  paginationBar: {\n    margin: \"10px 0 10px 0\",\n  },\n  pageButtons: {\n    backgroundColor: theme.palette.secondary.contrastText,\n    minWidth: \"30px\",\n    maxWidth: \"30px\",\n    minHeight: \"30px\",\n    maxHeight: \"30px\",\n    margin: \"0px 5px 0px 5px\",\n  },\n  currentPageButton: {\n    minWidth: \"30px\",\n    maxWidth: \"30px\",\n    minHeight: \"30px\",\n    maxHeight: \"30px\",\n    margin: \"0px 5px 0px 5px\",\n  },\n}));\n\nconst ASearchPaginationBar = (props) => {\n  const { totalPages, pageNum, onGoToPage, maxPages } = props;\n\n  const classes = useStyles();\n\n  const intPageNum = parseInt(pageNum);\n  const intTotalPages = parseInt(totalPages);\n\n  let intMaxPages = 9; //default to 9 if prop not provided\n  if (maxPages !== undefined) intMaxPages = parseInt(maxPages);\n\n  let startPageNum;\n  let endPageNum;\n\n  if (totalPages <= intMaxPages) {\n    startPageNum = 1;\n    endPageNum = intTotalPages;\n  } else {\n    startPageNum = intPageNum - Math.floor(intMaxPages / 2);\n    endPageNum = intPageNum + Math.floor(intMaxPages / 2);\n    if (startPageNum <= 1) {\n      endPageNum = endPageNum + (1 - startPageNum);\n      startPageNum = 1;\n    } else if (endPageNum > intTotalPages) {\n      startPageNum = startPageNum - (endPageNum - intTotalPages);\n      endPageNum = intTotalPages;\n    }\n  }\n\n  const handleGoToPage = (event) => {\n    event.stopPropagation();\n    onGoToPage(event, event.currentTarget.value);\n  };\n\n  return (\n    <Box className={classes.paginationBar}>\n      <Button\n        disabled={pageNum <= 1 ? true : false}\n        className={classes.pageButtons}\n        variant=\"outlined\"\n        color=\"primary\"\n        value={0}\n        onClick={handleGoToPage}\n      >\n        <FirstPageIcon />\n      </Button>\n      <Button\n        disabled={pageNum <= 1 ? true : false}\n        className={classes.pageButtons}\n        variant=\"outlined\"\n        color=\"primary\"\n        value={pageNum - 2}\n        onClick={handleGoToPage}\n      >\n        <NavigateBeforeIcon />\n      </Button>\n      {(() => {\n        let buttons = [];\n        for (let i = startPageNum; i <= endPageNum; i++) {\n          let buttonProps = {};\n          if (parseInt(pageNum) === i) {\n            buttonProps.className = classes.currentPageButton;\n            buttonProps.variant = \"contained\";\n          } else {\n            buttonProps.className = classes.pageButtons;\n            buttonProps.variant = \"outlined\";\n          }\n          buttons.push(\n            <Button\n              key={\"_page_button_\" + i}\n              color=\"primary\"\n              {...buttonProps}\n              value={i-1}\n              onClick={handleGoToPage}\n            >\n              {i}\n            </Button>\n          );\n        }\n        return buttons;\n      })()}\n      <Button\n        disabled={pageNum >= totalPages ? true : false}\n        className={classes.pageButtons}\n        variant=\"outlined\"\n        color=\"primary\"\n        value={pageNum}\n        onClick={handleGoToPage}\n      >\n        <NavigateNextIcon />\n      </Button>\n      <Button\n        disabled={pageNum >= totalPages ? true : false}\n        className={classes.pageButtons}\n        variant=\"outlined\"\n        color=\"primary\"\n        value={totalPages-1}\n        onClick={handleGoToPage}\n      >\n        <LastPageIcon />\n      </Button>\n    </Box>\n  );\n};\nexport default ASearchPaginationBar;\n"]},"metadata":{},"sourceType":"module"}