{"ast":null,"code":"var _jsxFileName = \"/Users/choonwheepeh/demo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Box from \"@material-ui/core/Box\";\nimport AForm from \"./components/aForm\";\nimport ASection from \"./components/aSection\";\nimport ATextField from \"./components/aTextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { tSExternalModuleReference } from \"@babel/types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = useState(\"edit\");\n  const [variant, setVariant] = useState(\"classic\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      width: \"800px\",\n      children: /*#__PURE__*/_jsxDEV(ASection, {\n        title: \"Test Form\",\n        collapsable: false,\n        children: /*#__PURE__*/_jsxDEV(AForm, {\n          defaultMode: mode,\n          defaultVariant: variant,\n          children: [/*#__PURE__*/_jsxDEV(ATextField, {\n            name: \"id\",\n            label: \"ID\",\n            defaultValue: \"123\",\n            mode: \"readOnly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ATextField, {\n            name: \"hiddenField\",\n            defaultValue: \"secret\",\n            mode: \"hidden\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ATextField, {\n            name: \"firstName\",\n            defaultValue: \"abc\",\n            required: true,\n            info: \"This is some information for you!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ATextField, {\n            name: \"lastName\",\n            defaultValue: \"def\",\n            required: true,\n            error: true,\n            helperText: \"Text to help you with!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ATextField, {\n            name: \"address1\",\n            label: \"Address\",\n            autocompleteOptions: [{\n              label: \"Label 1\",\n              value: \"Value 1\"\n            }, {\n              label: \"Label 2\",\n              value: \"Value 2\"\n            }],\n            autocompleteGetOptionLabel: option => option.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ATextField, {\n            label: \"Star Wars API\",\n            autocompleteService: \"test\",\n            autocompleteGetOptionLabel: option => option.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ATextField, {\n            label: \"Comments\",\n            multiline: true,\n            rows: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ATextField, {\n            name: \"question1\",\n            label: \"Q1. Whats is your name? Please enter your full name and not your nickname. Please share your life story and all your achievements in life.\",\n            multiline: true,\n            rows: \"4\",\n            variant: \"questionnaire\",\n            info: \"test test test test info!!!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              let newMode;\n              if (mode === \"edit\") newMode = \"disabled\";else if (mode === \"disabled\") newMode = \"readOnly\";else if (mode === \"readOnly\") newMode = \"hidden\";\n              setMode(newMode);\n            },\n            children: [\"Toggle Default Mode : \", mode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              let newVariant;\n              if (variant === \"classic\") newVariant = \"questionnaire\";else if (variant === \"questionnaire\") newVariant = \"standard\";else if (variant === \"standard\") newVariant = \"filled\";else if (variant === \"filled\") newVariant = \"outlined\";else if (variant === \"outlined\") newVariant = \"outlined\";\n              setVariant(newVariant);\n            },\n            children: [\"Toggle Default Variant : \", variant]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"AdgG0sKHrNVcZjxk1IpSGhCdrUg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/choonwheepeh/demo/src/App.js"],"names":["React","useState","Box","AForm","ASection","ATextField","Button","tSExternalModuleReference","App","mode","setMode","variant","setVariant","label","value","option","name","newMode","newVariant"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport Box from \"@material-ui/core/Box\";\nimport AForm from \"./components/aForm\";\nimport ASection from \"./components/aSection\";\nimport ATextField from \"./components/aTextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { tSExternalModuleReference } from \"@babel/types\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"edit\");\n  const [variant, setVariant] = useState(\"classic\");\n  return (\n    <div className=\"App\">\n      <Box width=\"800px\">\n        <ASection title=\"Test Form\" collapsable={false}>\n          <AForm defaultMode={mode} defaultVariant={variant}>\n            <ATextField\n              name=\"id\"\n              label=\"ID\"\n              defaultValue=\"123\"\n              mode=\"readOnly\"\n            />\n            <ATextField\n              name=\"hiddenField\"\n              defaultValue=\"secret\"\n              mode=\"hidden\"\n            />\n            <ATextField\n              name=\"firstName\"\n              defaultValue=\"abc\"\n              required\n              info=\"This is some information for you!\"\n            />\n            <ATextField\n              name=\"lastName\"\n              defaultValue=\"def\"\n              required\n              error\n              helperText=\"Text to help you with!\"\n            />\n            <ATextField\n              name=\"address1\"\n              label=\"Address\"\n              autocompleteOptions={[\n                { label: \"Label 1\", value: \"Value 1\" },\n                { label: \"Label 2\", value: \"Value 2\" },\n              ]}\n              autocompleteGetOptionLabel={(option) => option.value}\n            />\n            <ATextField\n              label=\"Star Wars API\"\n              autocompleteService=\"test\"\n              autocompleteGetOptionLabel={(option) => option.name}\n            />\n            <ATextField label=\"Comments\" multiline rows=\"4\" />\n            <ATextField\n              name=\"question1\"\n              label=\"Q1. Whats is your name? Please enter your full name and not your nickname. Please share your life story and all your achievements in life.\"\n              multiline\n              rows=\"4\"\n              variant=\"questionnaire\"\n              info=\"test test test test info!!!!\"\n            />\n\n            <Button type=\"submit\">Submit</Button>\n            <Button\n              onClick={() => {\n                let newMode;\n                if (mode === \"edit\") newMode = \"disabled\";\n                else if (mode === \"disabled\") newMode = \"readOnly\";\n                else if (mode === \"readOnly\") newMode = \"hidden\";\n                setMode(newMode);\n              }}\n            >\n              Toggle Default Mode : {mode}\n            </Button>\n            <Button\n              onClick={() => {\n                let newVariant;\n                if (variant === \"classic\") newVariant = \"questionnaire\";\n                else if (variant === \"questionnaire\") newVariant = \"standard\";\n                else if (variant === \"standard\") newVariant = \"filled\";\n                else if (variant === \"filled\") newVariant = \"outlined\";\n                else if (variant === \"outlined\") newVariant = \"outlined\";\n                setVariant(newVariant);\n              }}\n            >\n              Toggle Default Variant : {variant}\n            </Button>\n          </AForm>\n        </ASection>\n      </Box>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}