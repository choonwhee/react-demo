{"ast":null,"code":"var _jsxFileName = \"/Users/choonwheepeh/demo/src/components/Async.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction sleep(delay = 0) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport default function Async() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = open && options.length === 0;\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      const response = await fetch(\"https://swapi-deno.azurewebsites.net/api/starships\").then(response => response.json()).then(options => setOptions(options));\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    id: \"asynchronous-demo\",\n    style: {\n      width: 300\n    },\n    open: open,\n    onOpen: () => {\n      setOpen(true);\n    },\n    onClose: () => {\n      setOpen(false);\n    },\n    getOptionSelected: (option, value) => option.name === value.name,\n    getOptionLabel: option => option.name,\n    options: options,\n    loading: loading,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      label: \"Asynchronous\",\n      variant: \"outlined\",\n      InputProps: { ...params.InputProps,\n        endAdornment: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"inherit\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this) : null, params.InputProps.endAdornment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Async, \"NAnsH/wQUpBOztFs1nPXEavBw+I=\");\n\n_c = Async;\n\nvar _c;\n\n$RefreshReg$(_c, \"Async\");","map":{"version":3,"sources":["/Users/choonwheepeh/demo/src/components/Async.js"],"names":["React","TextField","Autocomplete","CircularProgress","sleep","delay","Promise","resolve","setTimeout","Async","open","setOpen","useState","options","setOptions","loading","length","useEffect","active","undefined","response","fetch","then","json","width","option","value","name","params","InputProps","endAdornment"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;;AAEA,SAASC,KAAT,CAAeC,KAAK,GAAG,CAAvB,EAA0B;AACxB,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9BC,IAAAA,UAAU,CAACD,OAAD,EAAUF,KAAV,CAAV;AACD,GAFM,CAAP;AAGD;;AAED,eAAe,SAASI,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,KAAK,CAACY,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,KAAK,CAACY,QAAN,CAAe,EAAf,CAA9B;AACA,QAAMG,OAAO,GAAGL,IAAI,IAAIG,OAAO,CAACG,MAAR,KAAmB,CAA3C;AAEAhB,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AACpB,QAAIC,MAAM,GAAG,IAAb;;AAEA,QAAI,CAACH,OAAL,EAAc;AACZ,aAAOI,SAAP;AACD;;AAED,KAAC,YAAY;AACX,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oDAD0B,CAAL,CAGpBC,IAHoB,CAGdF,QAAD,IAAcA,QAAQ,CAACG,IAAT,EAHC,EAIpBD,IAJoB,CAIdT,OAAD,IAAaC,UAAU,CAACD,OAAD,CAJR,CAAvB;AAKD,KAND;;AAQA,WAAO,MAAM;AACXK,MAAAA,MAAM,GAAG,KAAT;AACD,KAFD;AAGD,GAlBD,EAkBG,CAACH,OAAD,CAlBH;AAoBAf,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACP,IAAL,EAAW;AACTI,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF,GAJD,EAIG,CAACJ,IAAD,CAJH;AAMA,sBACE,QAAC,YAAD;AACE,IAAA,EAAE,EAAC,mBADL;AAEE,IAAA,KAAK,EAAE;AAAEc,MAAAA,KAAK,EAAE;AAAT,KAFT;AAGE,IAAA,IAAI,EAAEd,IAHR;AAIE,IAAA,MAAM,EAAE,MAAM;AACZC,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KANH;AAOE,IAAA,OAAO,EAAE,MAAM;AACbA,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD,KATH;AAUE,IAAA,iBAAiB,EAAE,CAACc,MAAD,EAASC,KAAT,KAAmBD,MAAM,CAACE,IAAP,KAAgBD,KAAK,CAACC,IAV9D;AAWE,IAAA,cAAc,EAAGF,MAAD,IAAYA,MAAM,CAACE,IAXrC;AAYE,IAAA,OAAO,EAAEd,OAZX;AAaE,IAAA,OAAO,EAAEE,OAbX;AAcE,IAAA,WAAW,EAAGa,MAAD,iBACX,QAAC,SAAD,OACMA,MADN;AAEE,MAAA,KAAK,EAAC,cAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,UAAU,EAAE,EACV,GAAGA,MAAM,CAACC,UADA;AAEVC,QAAAA,YAAY,eACV,QAAC,KAAD,CAAO,QAAP;AAAA,qBACGf,OAAO,gBACN,QAAC,gBAAD;AAAkB,YAAA,KAAK,EAAC,SAAxB;AAAkC,YAAA,IAAI,EAAE;AAAxC;AAAA;AAAA;AAAA;AAAA,kBADM,GAEJ,IAHN,EAIGa,MAAM,CAACC,UAAP,CAAkBC,YAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAHQ;AAJd;AAAA;AAAA;AAAA;AAAA;AAfJ;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GAlEuBrB,K;;KAAAA,K","sourcesContent":["import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nfunction sleep(delay = 0) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport default function Async() {\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = open && options.length === 0;\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      const response = await fetch(\n        \"https://swapi-deno.azurewebsites.net/api/starships\"\n      )\n        .then((response) => response.json())\n        .then((options) => setOptions(options));\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  return (\n    <Autocomplete\n      id=\"asynchronous-demo\"\n      style={{ width: 300 }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      getOptionSelected={(option, value) => option.name === value.name}\n      getOptionLabel={(option) => option.name}\n      options={options}\n      loading={loading}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Asynchronous\"\n          variant=\"outlined\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}