{"ast":null,"code":"var _jsxFileName = \"/Users/choonwheepeh/demo/src/components/aSearchPaginationBar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paginationBar: {\n    margin: \"10px 0 10px 0\"\n  },\n  pageButtons: {\n    backgroundColor: theme.palette.secondary.contrastText,\n    minWidth: \"30px\",\n    maxWidth: \"30px\",\n    minHeight: \"30px\",\n    maxHeight: \"30px\",\n    margin: \"0px 5px 0px 5px\"\n  },\n  currentPageButton: {\n    minWidth: \"30px\",\n    maxWidth: \"30px\",\n    minHeight: \"30px\",\n    maxHeight: \"30px\",\n    margin: \"0px 5px 0px 5px\"\n  }\n}));\n\nconst ASearchPaginationBar = props => {\n  _s();\n\n  const {\n    totalPages,\n    pageNum,\n    onPageClick,\n    maxPages\n  } = props;\n  const classes = useStyles();\n  let numPagesToShow = 9; //default to 9 if prop not provided\n\n  if (maxPages !== undefined) numPagesToShow = maxPages;\n  let startPageNum;\n\n  if (totalPages > numPagesToShow && pageNum > Math.floor(numPagesToShow / 2)) {\n    startPageNum = pageNum - Math.floor(numPagesToShow / 2);\n  } else {\n    startPageNum = 1;\n  }\n\n  let endPageNum;\n\n  if (totalPages > numPagesToShow && pageNum + Math.floor(numPagesToShow / 2) > numPagesToShow) {\n    endPageNum = pageNum + Math.floor(numPagesToShow / 2);\n  } else {\n    endPageNum = totalPages;\n  }\n\n  if (startPageNum === 1 && endPageNum > startPageNum + numPagesToShow) endPageNum = console.log(\"startPageNum: \" + startPageNum + \" | totalPages: \" + totalPages + \" | pageNum: \" + pageNum + \" | numPagesToShow: \" + numPagesToShow + \" | endPageNum: \" + endPageNum);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.paginationBar,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      disabled: pageNum <= 1 ? true : false,\n      className: classes.pageButtons,\n      variant: \"outlined\",\n      color: \"primary\",\n      children: [/*#__PURE__*/_jsxDEV(NavigateBeforeIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavigateBeforeIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: pageNum <= 1 ? true : false,\n      className: classes.pageButtons,\n      variant: \"outlined\",\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(NavigateBeforeIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), function () {\n      let buttons = [];\n\n      for (let i = startPageNum; i <= endPageNum; i++) {\n        let buttonProps = {};\n\n        if (pageNum === i) {\n          buttonProps.className = classes.currentPageButton;\n          buttonProps.variant = \"contained\";\n        } else {\n          buttonProps.className = classes.pageButtons;\n          buttonProps.variant = \"outlined\";\n        }\n\n        buttons.push( /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          ...buttonProps,\n          children: i\n        }, \"_page_button_\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this));\n      }\n\n      return buttons;\n    }(), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: pageNum >= totalPages ? true : false,\n      className: classes.pageButtons,\n      variant: \"outlined\",\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(NavigateNextIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: pageNum >= totalPages ? true : false,\n      className: classes.pageButtons,\n      variant: \"outlined\",\n      color: \"primary\",\n      children: [/*#__PURE__*/_jsxDEV(NavigateNextIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavigateNextIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ASearchPaginationBar, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ASearchPaginationBar;\nexport default ASearchPaginationBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ASearchPaginationBar\");","map":{"version":3,"sources":["/Users/choonwheepeh/demo/src/components/aSearchPaginationBar.js"],"names":["React","makeStyles","Box","Button","NavigateBeforeIcon","NavigateNextIcon","useStyles","theme","paginationBar","margin","pageButtons","backgroundColor","palette","secondary","contrastText","minWidth","maxWidth","minHeight","maxHeight","currentPageButton","ASearchPaginationBar","props","totalPages","pageNum","onPageClick","maxPages","classes","numPagesToShow","undefined","startPageNum","Math","floor","endPageNum","console","log","buttons","i","buttonProps","className","variant","push"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\n\nconst useStyles = makeStyles((theme) => ({\n  paginationBar: {\n    margin: \"10px 0 10px 0\",\n  },\n  pageButtons: {\n    backgroundColor: theme.palette.secondary.contrastText,\n    minWidth: \"30px\",\n    maxWidth: \"30px\",\n    minHeight: \"30px\",\n    maxHeight: \"30px\",\n    margin: \"0px 5px 0px 5px\",\n  },\n  currentPageButton: {\n    minWidth: \"30px\",\n    maxWidth: \"30px\",\n    minHeight: \"30px\",\n    maxHeight: \"30px\",\n    margin: \"0px 5px 0px 5px\",\n  },\n}));\n\nconst ASearchPaginationBar = (props) => {\n  const { totalPages, pageNum, onPageClick, maxPages } = props;\n\n  const classes = useStyles();\n\n  let numPagesToShow = 9; //default to 9 if prop not provided\n  if (maxPages !== undefined) numPagesToShow = maxPages;\n  let startPageNum;\n\n  if (totalPages > numPagesToShow && pageNum > Math.floor(numPagesToShow / 2)) {\n    startPageNum = pageNum - Math.floor(numPagesToShow / 2);\n  } else {\n    startPageNum = 1;\n  }\n\n  let endPageNum;\n  if (\n    totalPages > numPagesToShow &&\n    pageNum + Math.floor(numPagesToShow / 2) > numPagesToShow\n  ) {\n    endPageNum = pageNum + Math.floor(numPagesToShow / 2);\n  } else {\n    endPageNum = totalPages;\n  }\n\n  if (startPageNum === 1 && endPageNum > startPageNum + numPagesToShow) endPageNum = \n\n\n  console.log(\n    \"startPageNum: \" +\n      startPageNum +\n      \" | totalPages: \" +\n      totalPages +\n      \" | pageNum: \" +\n      pageNum +\n      \" | numPagesToShow: \" +\n      numPagesToShow +\n      \" | endPageNum: \" +\n      endPageNum\n  );\n\n  return (\n    <Box className={classes.paginationBar}>\n      <Button\n        disabled={pageNum <= 1 ? true : false}\n        className={classes.pageButtons}\n        variant=\"outlined\"\n        color=\"primary\"\n      >\n        <NavigateBeforeIcon />\n        <NavigateBeforeIcon />\n      </Button>\n      <Button\n        disabled={pageNum <= 1 ? true : false}\n        className={classes.pageButtons}\n        variant=\"outlined\"\n        color=\"primary\"\n      >\n        <NavigateBeforeIcon />\n      </Button>\n      {(function () {\n        let buttons = [];\n        for (let i = startPageNum; i <= endPageNum; i++) {\n          let buttonProps = {};\n          if (pageNum === i) {\n            buttonProps.className = classes.currentPageButton;\n            buttonProps.variant = \"contained\";\n          } else {\n            buttonProps.className = classes.pageButtons;\n            buttonProps.variant = \"outlined\";\n          }\n          buttons.push(\n            <Button\n              key={\"_page_button_\" + i}\n              variant=\"outlined\"\n              color=\"primary\"\n              {...buttonProps}\n            >\n              {i}\n            </Button>\n          );\n        }\n        return buttons;\n      })()}\n      <Button\n        disabled={pageNum >= totalPages ? true : false}\n        className={classes.pageButtons}\n        variant=\"outlined\"\n        color=\"primary\"\n      >\n        <NavigateNextIcon />\n      </Button>\n      <Button\n        disabled={pageNum >= totalPages ? true : false}\n        className={classes.pageButtons}\n        variant=\"outlined\"\n        color=\"primary\"\n      >\n        <NavigateNextIcon />\n        <NavigateNextIcon />\n      </Button>\n    </Box>\n  );\n};\nexport default ASearchPaginationBar;\n"]},"metadata":{},"sourceType":"module"}