{"ast":null,"code":"var _jsxFileName = \"/Users/choonwheepeh/demo/src/components/aSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AFastTable from \"./aFastTable\";\nimport ASearchPaginationBar from \"./aSearchPaginationBar\";\nimport { cloneChildrenWithDefaultModeProps } from \"./utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ASearch = props => {\n  _s();\n\n  const {\n    columnDefs,\n    service,\n    fetchDataHandler,\n    maxPages\n  } = props;\n  const [totalPages, setTotalPages] = useState({\n    totalPages: 1,\n    pageNum: 1,\n    rowData: []\n  });\n\n  const fetchData = (prevSearchConditions, pageNum, pageSize, sortBy, sortOrder, filterBy, filterCondition) => {\n    console.log(service); //mock method...to be implemented...\n\n    const data = {\n      pageNum: 1,\n      totalPages: 13,\n      rowData: [{\n        id: 1111,\n        make: \"Mock Data\",\n        model: \"From Prop\",\n        price: 1111111\n      }, {\n        id: 1231,\n        make: \"Toyota\",\n        model: \"Celica\",\n        price: 35000\n      }, {\n        id: 1232,\n        make: \"Ford\",\n        model: \" Mondeo\",\n        price: 32000\n      }, {\n        id: 1233,\n        make: \"Porsche\",\n        model: \"Boxter\",\n        price: 35000\n      }, {\n        id: 1234,\n        make: \"Mercedes Benz\",\n        model: \"S Class\",\n        price: 80000\n      }]\n    };\n\n    if (service !== undefined) {\n      console.log(\"fetch: \" + service);\n      fetch(service).then(response => response.json()).then(rowData => {\n        console.log(\"rowData: \" + JSON.stringify(rowData));\n        setData({\n          totalPages: 1,\n          pageNum: 1,\n          rowData: rowData\n        });\n      });\n    } else if (fetchDataHandler !== undefined) {\n      //use handler from parent to fetchRowData\n      fetchDataHandler(prevSearchConditions, pageNum, pageSize, sortBy, sortOrder, filterBy, filterCondition);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleGoToPage = (event, pageNum) => {\n    const data = fetchData();\n  };\n\n  const childrenWithAdditionalProps = cloneChildrenWithDefaultModeProps(props);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        margin: \"20px\"\n      },\n      children: [childrenWithAdditionalProps, /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          height: \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AFastTable, {\n        columnDefs: columnDefs,\n        rowData: data.rowData,\n        rowSelection: \"multiple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ASearchPaginationBar, {\n      totalPages: data.totalPages,\n      pageNum: data.pageNum,\n      maxPages: maxPages === undefined ? 9 : maxPages,\n      onGoToPage: handleGoToPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ASearch, \"HU8tPGgg70SLzdyh8cpsLWUpd90=\");\n\n_c = ASearch;\nexport default ASearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"ASearch\");","map":{"version":3,"sources":["/Users/choonwheepeh/demo/src/components/aSearch.js"],"names":["React","useState","useEffect","Box","Typography","AFastTable","ASearchPaginationBar","cloneChildrenWithDefaultModeProps","ASearch","props","columnDefs","service","fetchDataHandler","maxPages","totalPages","setTotalPages","pageNum","rowData","fetchData","prevSearchConditions","pageSize","sortBy","sortOrder","filterBy","filterCondition","console","log","data","id","make","model","price","undefined","fetch","then","response","json","JSON","stringify","setData","handleGoToPage","event","childrenWithAdditionalProps","margin","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AFastTable from \"./aFastTable\";\nimport ASearchPaginationBar from \"./aSearchPaginationBar\";\nimport { cloneChildrenWithDefaultModeProps } from \"./utils\";\n\nconst ASearch = (props) => {\n  const { columnDefs, service, fetchDataHandler, maxPages } = props;\n\n  const [totalPages, setTotalPages] = useState({ totalPages: 1, pageNum: 1, rowData: [] });\n\n  const fetchData = (\n    prevSearchConditions,\n    pageNum,\n    pageSize,\n    sortBy,\n    sortOrder,\n    filterBy,\n    filterCondition\n  ) => {\n    console.log(service);\n    //mock method...to be implemented...\n    const data = {\n      pageNum: 1,\n      totalPages: 13,\n      rowData: [\n        { id: 1111, make: \"Mock Data\", model: \"From Prop\", price: 1111111 },\n        { id: 1231, make: \"Toyota\", model: \"Celica\", price: 35000 },\n        { id: 1232, make: \"Ford\", model: \" Mondeo\", price: 32000 },\n        { id: 1233, make: \"Porsche\", model: \"Boxter\", price: 35000 },\n        { id: 1234, make: \"Mercedes Benz\", model: \"S Class\", price: 80000 },\n      ],\n    };\n    if (service !== undefined) {\n      console.log(\"fetch: \" + service);\n      fetch(service)\n        .then((response) => response.json())\n        .then((rowData) => {\n          console.log(\"rowData: \" + JSON.stringify(rowData));\n          setData({ totalPages: 1, pageNum: 1, rowData: rowData });\n        });\n    } else if (fetchDataHandler !== undefined) {\n      //use handler from parent to fetchRowData\n      fetchDataHandler(\n        prevSearchConditions,\n        pageNum,\n        pageSize,\n        sortBy,\n        sortOrder,\n        filterBy,\n        filterCondition\n      );\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleGoToPage = (event, pageNum) => {\n    const data = fetchData();\n  };\n\n  const childrenWithAdditionalProps = cloneChildrenWithDefaultModeProps(props);\n\n  return (\n    <React.Fragment>\n      <Box style={{ margin: \"20px\" }}>\n        {childrenWithAdditionalProps}\n        <Box style={{ height: \"20px\" }} />\n        <AFastTable\n          columnDefs={columnDefs}\n          rowData={data.rowData}\n          rowSelection=\"multiple\"\n        />\n      </Box>\n      <ASearchPaginationBar\n        totalPages={data.totalPages}\n        pageNum={data.pageNum}\n        maxPages={maxPages === undefined ? 9 : maxPages}\n        onGoToPage={handleGoToPage}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default ASearch;\n"]},"metadata":{},"sourceType":"module"}