{"ast":null,"code":"var _jsxFileName = \"/Users/choonwheepeh/demo/src/components/aSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AFastTable from \"./aFastTable\";\nimport ASearchPaginationBar from \"./aSearchPaginationBar\";\nimport { cloneChildrenWithDefaultModeProps } from \"./utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ASearch = props => {\n  _s();\n\n  const {\n    columnDefs,\n    service,\n    fetchDataHandler,\n    size,\n    maxPages\n  } = props;\n  const [data, setData] = useState({\n    page: 1,\n    size: size === undefined ? 20 : size,\n    totalPages: 5,\n    rowData: []\n  });\n\n  const fetchData = page => {\n    //mock method...to be implemented...\n    if (service !== undefined) {\n      fetch(\"/customers?page\").then(response => response.json(), response => console.log(response.json())).then(rowData => {\n        console.log(JSON.stringify(rowData));\n        setData({\n          page: page,\n          totalPages: 5,\n          rowData: rowData\n        });\n      });\n    } else if (fetchDataHandler !== undefined) {\n      //use handler from parent to fetchRowData\n      fetchDataHandler();\n    }\n  };\n\n  const handleGoToPage = (event, page) => {\n    fetchData(page);\n  };\n\n  const childrenWithAdditionalProps = cloneChildrenWithDefaultModeProps(props);\n  useEffect(() => {\n    fetchData(1);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        margin: \"20px\"\n      },\n      children: [childrenWithAdditionalProps, /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          height: \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AFastTable, {\n        columnDefs: columnDefs,\n        rowData: data.rowData,\n        rowSelection: \"multiple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ASearchPaginationBar, {\n      totalPages: data.totalPages,\n      page: data.page,\n      maxPages: maxPages === undefined ? 9 : maxPages,\n      onGoToPage: handleGoToPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ASearch, \"zn6Zcp4I2+dTp0EZiHBPLFxC6c4=\");\n\n_c = ASearch;\nexport default ASearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"ASearch\");","map":{"version":3,"sources":["/Users/choonwheepeh/demo/src/components/aSearch.js"],"names":["React","useState","useEffect","Box","Typography","AFastTable","ASearchPaginationBar","cloneChildrenWithDefaultModeProps","ASearch","props","columnDefs","service","fetchDataHandler","size","maxPages","data","setData","page","undefined","totalPages","rowData","fetchData","fetch","then","response","json","console","log","JSON","stringify","handleGoToPage","event","childrenWithAdditionalProps","margin","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,iCAAT,QAAkD,SAAlD;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA,gBAAvB;AAAyCC,IAAAA,IAAzC;AAA+CC,IAAAA;AAA/C,MAA4DL,KAAlE;AAEA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC;AAC/BgB,IAAAA,IAAI,EAAE,CADyB;AAE/BJ,IAAAA,IAAI,EAAEA,IAAI,KAAKK,SAAT,GAAqB,EAArB,GAA0BL,IAFD;AAG/BM,IAAAA,UAAU,EAAE,CAHmB;AAI/BC,IAAAA,OAAO,EAAE;AAJsB,GAAD,CAAhC;;AAOA,QAAMC,SAAS,GAAIJ,IAAD,IAAU;AAC1B;AAEA,QAAIN,OAAO,KAAKO,SAAhB,EAA2B;AACzBI,MAAAA,KAAK,CAAC,iBAAD,CAAL,CACGC,IADH,CAEKC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAFlB,EAGKD,QAAD,IAAcE,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAAT,EAAZ,CAHlB,EAKGF,IALH,CAKSH,OAAD,IAAa;AACjBM,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeT,OAAf,CAAZ;AACAJ,QAAAA,OAAO,CAAC;AAAEC,UAAAA,IAAI,EAAEA,IAAR;AAAcE,UAAAA,UAAU,EAAE,CAA1B;AAA6BC,UAAAA,OAAO,EAAEA;AAAtC,SAAD,CAAP;AACD,OARH;AASD,KAVD,MAUO,IAAIR,gBAAgB,KAAKM,SAAzB,EAAoC;AACzC;AACAN,MAAAA,gBAAgB;AACjB;AACF,GAjBD;;AAmBA,QAAMkB,cAAc,GAAG,CAACC,KAAD,EAAQd,IAAR,KAAiB;AACtCI,IAAAA,SAAS,CAACJ,IAAD,CAAT;AACD,GAFD;;AAIA,QAAMe,2BAA2B,GAAGzB,iCAAiC,CAACE,KAAD,CAArE;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,SAAS,CAAC,CAAD,CAAT;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEY,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA,iBACGD,2BADH,eAEE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEE,UAAAA,MAAM,EAAE;AAAV;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,UAAD;AACE,QAAA,UAAU,EAAExB,UADd;AAEE,QAAA,OAAO,EAAEK,IAAI,CAACK,OAFhB;AAGE,QAAA,YAAY,EAAC;AAHf;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,oBAAD;AACE,MAAA,UAAU,EAAEL,IAAI,CAACI,UADnB;AAEE,MAAA,IAAI,EAAEJ,IAAI,CAACE,IAFb;AAGE,MAAA,QAAQ,EAAEH,QAAQ,KAAKI,SAAb,GAAyB,CAAzB,GAA6BJ,QAHzC;AAIE,MAAA,UAAU,EAAEgB;AAJd;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA1DD;;GAAMtB,O;;KAAAA,O;AA4DN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AFastTable from \"./aFastTable\";\nimport ASearchPaginationBar from \"./aSearchPaginationBar\";\nimport { cloneChildrenWithDefaultModeProps } from \"./utils\";\n\nconst ASearch = (props) => {\n  const { columnDefs, service, fetchDataHandler, size, maxPages } = props;\n\n  const [data, setData] = useState({\n    page: 1,\n    size: size === undefined ? 20 : size,\n    totalPages: 5,\n    rowData: [],\n  });\n\n  const fetchData = (page) => {\n    //mock method...to be implemented...\n\n    if (service !== undefined) {\n      fetch(\"/customers?page\")\n        .then(\n          (response) => response.json(),\n          (response) => console.log(response.json())\n        )\n        .then((rowData) => {\n          console.log(JSON.stringify(rowData));\n          setData({ page: page, totalPages: 5, rowData: rowData });\n        });\n    } else if (fetchDataHandler !== undefined) {\n      //use handler from parent to fetchRowData\n      fetchDataHandler();\n    }\n  };\n\n  const handleGoToPage = (event, page) => {\n    fetchData(page);\n  };\n\n  const childrenWithAdditionalProps = cloneChildrenWithDefaultModeProps(props);\n\n  useEffect(() => {\n    fetchData(1);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Box style={{ margin: \"20px\" }}>\n        {childrenWithAdditionalProps}\n        <Box style={{ height: \"20px\" }} />\n        <AFastTable\n          columnDefs={columnDefs}\n          rowData={data.rowData}\n          rowSelection=\"multiple\"\n        />\n      </Box>\n      <ASearchPaginationBar\n        totalPages={data.totalPages}\n        page={data.page}\n        maxPages={maxPages === undefined ? 9 : maxPages}\n        onGoToPage={handleGoToPage}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default ASearch;\n"]},"metadata":{},"sourceType":"module"}